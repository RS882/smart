{"version":3,"file":"static/js/782.1707d5d6.chunk.js","mappings":"wSAWMA,EAAiCC,EAAAA,GAAAA,IAAH,0CAI9BC,EAAkBD,EAAAA,GAAAA,IAAH,2CAKfE,EAAiD,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAE/D,OACC,SAACL,EAAD,WACC,SAACE,EAAD,WACC,SAACI,EAAA,EAAD,CAAWC,UAAWH,EAAMC,KAAMA,EAAMG,KAAM,WAAYC,SAAUC,EAAAA,GAAkBC,cAAc,SAMxG,EAAeC,EAAAA,KAAWT,G,UCVpBU,GAA2BZ,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAH,wHAGpB,SAAAc,GAAK,aAAI,UAAAA,EAAMC,MAAMC,aAAZ,eAAmBC,SAAU,yBAO1CC,EAAelB,EAAAA,GAAAA,IAAH,4CA2DlB,EArDuB,WAEtB,IAAMmB,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,KACZC,GAAOC,EAAAA,EAAAA,GAAeC,EAAAA,IACtBC,GAAqBF,EAAAA,EAAAA,GAAeG,EAAAA,IAQ1C,OACC,SAAC,KAAD,CACCC,cARyC,CAC1CC,YAAa,GACbC,YAAa,GACbC,gBAAiB,IAMhBC,SAAU,SAACC,EAAQC,GAEdD,EAAOJ,cAAgBN,EAAKY,SAC/BD,EAAQE,cAAc,cAAe,kBAC3BH,EAAOJ,cAAgBI,EAAOH,YACxCI,EAAQE,cAAc,cAAe,+CAC3BH,EAAOH,cAAgBG,EAAOF,gBACxCG,EAAQE,cAAc,kBAAmB,oCAEzCF,EAAQG,aAAaJ,GACrBZ,GAAUiB,EAAAA,EAAAA,KAAe,kBAAKf,GAAN,IAAYY,SAAUF,EAAOH,gBACrDI,EAAQK,YACRlB,GAAUmB,EAAAA,EAAAA,KAAuB,IACjCrB,EAAS,mBAEVe,EAAQO,eAAc,IAjBxB,SAoBE,gBAAMC,EAAN,2BACA,SAAC,EAAAC,sBAAD,WACC,UAAC/B,EAAD,YACC,SAAC,EAAD,CAAwBT,KAAMuB,EAAmBkB,iBAAkBxC,KAAM,iBACzE,SAAC,EAAD,CAAwBD,KAAMuB,EAAmBmB,iBAAkBzC,KAAM,iBACzE,SAAC,EAAD,CAAwBD,KAAMuB,EAAmBoB,mBAAoB1C,KAAM,qBAC3E,UAACc,EAAD,YACC,SAAC6B,EAAA,EAAD,CAAQC,MAAM,OAAOC,OAAO,OAAOC,UAAU,OAAO3C,KAAK,SAAS4C,SAAUT,EAAYU,aAAxF,SAAwG1B,EAAmB2B,WAC3H,SAAC,IAAD,iB,oPCrEMV,EAAwB3C,EAAAA,GAAAA,IAAH,sJAExB,SAAAc,GAAK,aAAI,UAAAA,EAAMC,MAAMC,aAAZ,eAAmBC,SAAU,yBAGtC,SAAAH,GAAK,aAAI,UAAAA,EAAMC,MAAMC,aAAZ,eAAmBsC,UAAW,yBAO3CC,EAAavD,EAAAA,GAAAA,IAAH,0JAIN,SAAAc,GAAK,aAAI,UAAAA,EAAMC,MAAMC,aAAZ,eAAmBsC,UAAW,yBAM3CE,EAA6BxD,EAAAA,GAAAA,IAAH,qFAEtB,SAAAc,GAAK,aAAI,UAAAA,EAAMC,MAAMC,aAAZ,eAAmBC,SAAU,yBAK1CwC,EAAoBzD,EAAAA,GAAAA,IAAH,iEACb,SAAAc,GAAK,aAAI,UAAAA,EAAMC,MAAMC,aAAZ,eAAmBC,SAAU,yBAK1CyC,EAAkB1D,EAAAA,GAAAA,IAAH,2DAKf2D,EAAc3D,EAAAA,GAAAA,IAAH,8EAMX4D,EAAwB5D,EAAAA,GAAAA,IAAH,gDAIrB6D,EAAgB7D,EAAAA,GAAAA,IAAH,6CAIb8D,EAAoB9D,EAAAA,GAAAA,KAAH,0BAIjB+D,GAAoB/D,EAAAA,EAAAA,IAAOgE,EAAAA,GAAPhE,CAAH,+HACb,SAAAc,GAAK,OAAIA,EAAMC,MAAMkD,MAAMC,UAAY,aAItC,SAAApD,GAAK,OAAIA,EAAMC,MAAMkD,MAAME,MAAQ,aAIjCC,EAAYpE,EAAAA,GAAAA,IAAH,sFAEZ,SAAAc,GAAK,aAAI,UAAAA,EAAMC,MAAMC,aAAZ,eAAmBC,SAAU,yBAqDhD,UA/C2B,WAE1B,IAMsBoD,EANhBlD,GAAWC,EAAAA,EAAAA,MAEXG,GAAOC,EAAAA,EAAAA,GAAeC,EAAAA,IACtBtB,GAAOqB,EAAAA,EAAAA,GAAe8C,EAAAA,IAEtBC,EAAU,IAAIC,KAAKA,KAAKC,MAAMlD,EAAKmD,mBAEnCC,EAAmB,UAAMJ,EAAQK,UAAd,aADHP,EAC2CE,EAAQM,WAAa,EADxCR,EAAM,GAAKA,EAAM,GAAjB,WAA0BA,GAA1B,UAAqCA,IAC1D,YAAmEE,EAAQO,eAE9FC,EAAiB,SAAC5E,GAAD,OAA+B,iCAAE,SAAC2D,EAAD,UAAoB3D,IAAtB,YAItD,OACC,UAACwC,EAAD,YACC,SAACY,EAAD,UAAahC,EAAKnB,QAClB,UAACoD,EAAD,YACC,SAACE,EAAD,WACC,SAACC,EAAD,CAAaqB,IAAKzD,EAAK0D,QAAUC,EAAUjC,OAAO,MAAMD,MAAM,MAAMmC,IAAI,mBAEzE,UAAC1B,EAAD,YACC,UAACG,EAAD,yBAA4BzD,EAAKiF,QAAjC,YAA4CT,OAC5C,UAACf,EAAD,yBAA4BzD,EAAKkF,YAAjC,YAAgD9D,EAAK+D,gBAAgBC,kBAIvE,UAAC1B,EAAD,WACEkB,EAAe5E,EAAKqF,YAAY,KACjC,UAACzB,EAAD,CAAmB0B,GAAG,8BAAtB,UAAqDtF,EAAKqF,YAAY,GAAtE,OACCT,EAAe5E,EAAKqF,YAAY,KACjC,UAACzB,EAAD,CAAmB0B,GAAG,gCAAtB,UAAuDtF,EAAKqF,YAAY,GAAxE,OACCT,EAAe5E,EAAKqF,YAAY,KACjC,UAACzB,EAAD,CAAmB0B,GAAG,iCAAtB,UAAwDtF,EAAKqF,YAAY,GAAzE,OACCT,EAAe5E,EAAKqF,YAAY,KACjC,UAACzB,EAAD,CAAmB0B,GAAG,2BAAtB,UAAkDtF,EAAKqF,YAAY,GAAnE,WAGD,SAACpB,EAAD,WACC,SAAC,IAAD,CAAQpB,MAAM,OAAO0C,QA3BI,kBAAMvE,EAAS,gCA2BxC,SAAoDhB,EAAKkD,iB","sources":["components/PrivateOffice/InputFormForChangePass.tsx","components/PrivateOffice/ChangePasswort.tsx","components/PrivateOffice/GeneralInformation.tsx"],"sourcesContent":["import React, { FC } from 'react';\r\nimport { validatePassword } from '../../utilits/validators';\r\nimport InputForm from '../Login/InputForm/InputForm';\r\nimport styled from 'styled-components';\r\n\r\n\r\ninterface IFormForChangePass {\r\n\ttext?: string;\r\n\tname: string;\r\n\r\n};\r\nconst StyledFormForChangePassWrapper = styled.div`\r\n\tdisplay: flex;\r\n`;\r\n\r\nconst StyledInputForm = styled.div`\r\n\tflex: 1 0 100%;\r\n`;\r\n\r\n\r\nconst InputFormForChangePass: FC<IFormForChangePass> = ({ text, name }) => {\r\n\r\n\treturn (\r\n\t\t<StyledFormForChangePassWrapper>\r\n\t\t\t<StyledInputForm>\r\n\t\t\t\t<InputForm labeltext={text} name={name} type={'password'} validate={validatePassword} isStatusIcon={true} />\r\n\t\t\t</StyledInputForm>\r\n\t\t</StyledFormForChangePassWrapper>\r\n\t);\r\n};\r\n\r\nexport default React.memo(InputFormForChangePass);","import { Form, Formik } from 'formik';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { changeisPasswordChange, selectUserData } from '../../redux/LoginSlice';\r\nimport { changeUserData } from '../../redux/Thunk/thunkLogin';\r\n\r\nimport Button from '../Button';\r\nimport { StyledStatusIcon } from '../Login/InputForm/InputForm';\r\nimport { useAppDispatch, useAppSelector } from './../../redux/hooks';\r\nimport { selectchangePasswortText } from './../../redux/LanguageSlice';\r\nimport { StyledPrivatOfficebox } from './GeneralInformation';\r\nimport InputFormForChangePass from './InputFormForChangePass';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\ninterface IChangePasswortData {\r\n\toldPasswort: string;\r\n\tnewPasswort: string;\r\n\tconfirmPasswort: string;\r\n};\r\n\r\nconst StyledChangePasswortForm = styled(Form)`\r\n\tdisplay: grid;\r\n\tgap:20px;\r\n\t@media ${props => props.theme.media?.tablet || '(width >= 767.98px)'}{\r\n\t\twidth:340px;\r\n\t\tpadding-bottom:60px;\r\n\t};\r\n`;\r\n\r\n\r\nconst StyledBtnBox = styled.div`\r\n\tdisplay: flex;\r\n\r\n`;\r\n\r\n\r\nconst ChangePasswort = () => {\r\n\r\n\tconst navigate = useNavigate();\r\n\tconst dispatsch = useAppDispatch();\r\n\tconst user = useAppSelector(selectUserData);\r\n\tconst textChangepasswort = useAppSelector(selectchangePasswortText);\r\n\r\n\tconst initialValues: IChangePasswortData = {\r\n\t\toldPasswort: '',\r\n\t\tnewPasswort: '',\r\n\t\tconfirmPasswort: '',\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={initialValues}\r\n\t\t\tonSubmit={(values, actions) => {\r\n\r\n\t\t\t\tif (values.oldPasswort !== user.password) {\r\n\t\t\t\t\tactions.setFieldError('oldPasswort', 'Wrong password');\r\n\t\t\t\t} else if (values.oldPasswort === values.newPasswort) {\r\n\t\t\t\t\tactions.setFieldError('newPasswort', 'The new password is the same as the old one');\r\n\t\t\t\t} else if (values.newPasswort !== values.confirmPasswort) {\r\n\t\t\t\t\tactions.setFieldError('confirmPasswort', 'Error when re-entering password');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tactions.validateForm(values);\r\n\t\t\t\t\tdispatsch(changeUserData({ ...user, password: values.newPasswort, }));\r\n\t\t\t\t\tactions.resetForm();\r\n\t\t\t\t\tdispatsch(changeisPasswordChange(true));\r\n\t\t\t\t\tnavigate('/privateOffice')\r\n\t\t\t\t};\r\n\t\t\t\tactions.setSubmitting(false);\r\n\r\n\t\t\t}}>\r\n\t\t\t{({ ...propsFormik }) => (\r\n\t\t\t\t<StyledPrivatOfficebox>\r\n\t\t\t\t\t<StyledChangePasswortForm>\r\n\t\t\t\t\t\t<InputFormForChangePass text={textChangepasswort.enterOldPasswort} name={'oldPasswort'} />\r\n\t\t\t\t\t\t<InputFormForChangePass text={textChangepasswort.enterNewPasswort} name={'newPasswort'} />\r\n\t\t\t\t\t\t<InputFormForChangePass text={textChangepasswort.confirmNewPasswort} name={'confirmPasswort'} />\r\n\t\t\t\t\t\t<StyledBtnBox>\r\n\t\t\t\t\t\t\t<Button width='100%' height='48px' heigth768='48px' type='submit' disabled={propsFormik.isSubmitting} >{textChangepasswort.btnText}</Button>\r\n\t\t\t\t\t\t\t<StyledStatusIcon />\r\n\t\t\t\t\t\t</StyledBtnBox>\r\n\t\t\t\t\t</StyledChangePasswortForm>\r\n\t\t\t\t</StyledPrivatOfficebox>\r\n\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\nexport default ChangePasswort;","import React from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useAppSelector } from '../../redux/hooks';\r\nimport { selectGeneralInformationTaxt } from '../../redux/LanguageSlice';\r\nimport { selectUserData } from '../../redux/LoginSlice';\r\nimport Button from '../Button';\r\nimport noAvatar from '../../assets/noAvatar.png';\r\n\r\n\r\nexport const StyledPrivatOfficebox = styled.div`\r\n\tmargin: 0 20px 50px 20px;\r\n\t@media ${props => props.theme.media?.tablet || '(width >= 767.98px)'}{\r\n\t\tmargin-bottom:60px;\r\n\t};\r\n\t@media ${props => props.theme.media?.desktop || '(width >= 991.98px)'} {\r\n\t\tmargin: 0 0px 0px 135px;\r\n\t}\r\n`;\r\n\r\n\r\n\r\nconst StyledName = styled.div`\r\n\tfont-weight: 600;\r\n\tfont-size: 24px;\r\n\tmargin-bottom:30px;\r\n\t@media ${props => props.theme.media?.desktop || '(width >= 991.98px)'} {\r\n\t\tfont-weight: 700;\r\n\t\tfont-size: 28px;\r\n\t}\r\n`;\r\n\r\nconst StyledAvatarAndUserInfoBox = styled.div`\r\n\tmargin-bottom:30px;\r\n\t@media ${props => props.theme.media?.tablet || '(width >= 767.98px)'}{\r\n\tdisplay: flex;\r\n\t}\r\n`;\r\n\r\nconst StyledUserInfoBox = styled.div`\r\n\t@media ${props => props.theme.media?.tablet || '(width >= 767.98px)'}{\r\n\tmargin-left:30px;\r\n\t}\r\n`;\r\n\r\nconst StyledAvatarBox = styled.div`\r\n\theight:101px;\r\n\twidth:101px;\r\n\t`;\r\n\r\nconst SyledAvatar = styled.img`\r\n\theight:100%;\r\n\twidth:100%;\r\n\tborder-radius: 5px;\r\n`;\r\n\r\nconst StyledUserInformation = styled.div`\r\n\tmargin-top:10px;\r\n\t\r\n`;\r\nconst StyledArticle = styled.div`\r\nmargin-bottom:20px;\r\n`;\r\n\r\nconst StyledArticleText = styled.span`\r\n\r\n`;\r\n\r\nconst StyledArticleLink = styled(Link)`\r\n\tcolor: ${props => props.theme.color.darkBlue || '#2A5275'};\r\n\tfont-weight: 600;\r\n\ttransition: all 0.3s ease 0s;\r\n\t&:hover{\r\n\t\tcolor: ${props => props.theme.color.blue || '#4878A6'};\r\n\t}\r\n`;\r\n\r\nexport const StyledBtn = styled.div`\r\n\twidth:100%;\r\n\t@media ${props => props.theme.media?.tablet || '(width >= 767.98px)'} {\r\n\t\twidth: 310px;\r\n\t\t\r\n\t};\r\n`\r\n\r\nconst GeneralInformation = () => {\r\n\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst user = useAppSelector(selectUserData);\r\n\tconst text = useAppSelector(selectGeneralInformationTaxt);\r\n\r\n\tconst regDate = new Date(Date.parse(user.registrationDate));\r\n\tconst addNullAfter = (num: number): string => num > 0 && num < 10 ? `0${num}` : `${num}`;\r\n\tconst regDateText: string = `${regDate.getDate()}-${addNullAfter(regDate.getMonth() + 1)}-${regDate.getFullYear()}`;\r\n\r\n\tconst getArticleText = (text: string): JSX.Element => <><StyledArticleText>{text}</StyledArticleText>{` `} </>;\r\n\r\n\tconst onClickGoToPersData = () => navigate('/privateOffice/personalData');\r\n\r\n\treturn (\r\n\t\t<StyledPrivatOfficebox>\r\n\t\t\t<StyledName>{user.name}</StyledName>\r\n\t\t\t<StyledAvatarAndUserInfoBox>\r\n\t\t\t\t<StyledAvatarBox>\r\n\t\t\t\t\t<SyledAvatar src={user.avatar || noAvatar} height='101' width='101' alt='User avatar' />\r\n\t\t\t\t</StyledAvatarBox>\r\n\t\t\t\t<StyledUserInfoBox>\r\n\t\t\t\t\t<StyledUserInformation> {`${text.regData} ${regDateText}`}</StyledUserInformation>\r\n\t\t\t\t\t<StyledUserInformation> {`${text.numOfOrders} ${user.shoppingHistory.length}`}</StyledUserInformation>\r\n\t\t\t\t</StyledUserInfoBox>\r\n\t\t\t</StyledAvatarAndUserInfoBox>\r\n\r\n\t\t\t<StyledArticle>\r\n\t\t\t\t{getArticleText(text.articleText[0])}\r\n\t\t\t\t<StyledArticleLink to='/privateOffice/personalData'>{text.articleText[1]} </StyledArticleLink>\r\n\t\t\t\t{getArticleText(text.articleText[2])}\r\n\t\t\t\t<StyledArticleLink to='/privateOffice/changePassword'>{text.articleText[3]} </StyledArticleLink>\r\n\t\t\t\t{getArticleText(text.articleText[4])}\r\n\t\t\t\t<StyledArticleLink to='/privateOffice/shoppingHistory'>{text.articleText[5]} </StyledArticleLink>\r\n\t\t\t\t{getArticleText(text.articleText[6])}\r\n\t\t\t\t<StyledArticleLink to='/privateOffice/favorites'>{text.articleText[7]} </StyledArticleLink>\r\n\t\t\t</StyledArticle>\r\n\r\n\t\t\t<StyledBtn>\r\n\t\t\t\t<Button width='100%' onClick={onClickGoToPersData}>{text.btnText}</Button>\r\n\t\t\t</StyledBtn>\r\n\r\n\t\t</StyledPrivatOfficebox>\r\n\t);\r\n};\r\n\r\nexport default GeneralInformation;"],"names":["StyledFormForChangePassWrapper","styled","StyledInputForm","InputFormForChangePass","text","name","InputForm","labeltext","type","validate","validatePassword","isStatusIcon","React","StyledChangePasswortForm","Form","props","theme","media","tablet","StyledBtnBox","navigate","useNavigate","dispatsch","useAppDispatch","user","useAppSelector","selectUserData","textChangepasswort","selectchangePasswortText","initialValues","oldPasswort","newPasswort","confirmPasswort","onSubmit","values","actions","password","setFieldError","validateForm","changeUserData","resetForm","changeisPasswordChange","setSubmitting","propsFormik","StyledPrivatOfficebox","enterOldPasswort","enterNewPasswort","confirmNewPasswort","Button","width","height","heigth768","disabled","isSubmitting","btnText","desktop","StyledName","StyledAvatarAndUserInfoBox","StyledUserInfoBox","StyledAvatarBox","SyledAvatar","StyledUserInformation","StyledArticle","StyledArticleText","StyledArticleLink","Link","color","darkBlue","blue","StyledBtn","num","selectGeneralInformationTaxt","regDate","Date","parse","registrationDate","regDateText","getDate","getMonth","getFullYear","getArticleText","src","avatar","noAvatar","alt","regData","numOfOrders","shoppingHistory","length","articleText","to","onClick"],"sourceRoot":""}