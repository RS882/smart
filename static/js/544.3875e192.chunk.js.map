{"version":3,"file":"static/js/544.3875e192.chunk.js","mappings":"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","sources":["components/Breadcrumbs/Breadcrumbs.tsx","components/Cart/CartDateBox.tsx","components/Cart/Delivery/DeliveryDateBox/DeliveryDateBoxContainer.tsx","components/Cart/Delivery/SelectCity/SelectCityContainer.tsx","components/Favorites/loginInFavoritesPage.tsx","components/Favorites/Favorites.tsx","components/SelectTypeFilter.tsx","components/ItemTypeFilter.tsx","components/showItemsWithFiltAndSort.tsx","components/PrivateOffice/Favorits.tsx","components/PrivateOffice/privOfRoutObj.ts","components/PrivateOffice/PrivateOffice.tsx","utilits/AutoSubmitForFromik.tsx","utilits/hooks.ts"],"sourcesContent":["import React, { FC } from 'react';\r\n\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\n\r\ninterface IBreadcrumbsProps {\r\n\tlink?: string;\r\n\ttext: string[];\r\n}\r\n\r\nconst StyledBreadcrumbsBox = styled.div`\r\n\t\r\n\tdisplay:flex;\r\n`;\r\n\r\nconst StyledBreadcrumbsLink = styled(Link)`\r\n\tdisplay:flex;\r\n\talign-items:flex-end;\r\n\tmargin-right:15px;\r\n`;\r\nconst StyledBreadcrumbsArrow = styled.div`\r\n\tmargin-left:15px;\r\n`;\r\nconst StyledBreadcrumbsActive = styled.div`\r\n\tcolor:${props => props.theme.color.text.second || '#838688'};\r\n`;\r\n\r\nconst Breadcrumbs: FC<IBreadcrumbsProps> = ({ link, text }) => {\r\n\tconst urlPath = useLocation().pathname;\r\n\tconst url = link || urlPath;\r\n\r\n\tconst linkElem = url.split('/').map(e => '/' + e).map((e, i, arr) => {\r\n\t\tconst textT = text[i];\r\n\r\n\t\treturn arr.length !== i + 1 ?\r\n\t\t\t<StyledBreadcrumbsLink to={i !== 0 ? e : '/'} key={e + i}>\r\n\t\t\t\t{textT}\r\n\t\t\t\t<StyledBreadcrumbsArrow className={'_icon-arrow-right'} />\r\n\t\t\t</StyledBreadcrumbsLink > :\r\n\t\t\t<StyledBreadcrumbsActive key={e + i}>{textT}</StyledBreadcrumbsActive>;\r\n\r\n\t});\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<StyledBreadcrumbsBox>\r\n\t\t\t\t{linkElem}\r\n\t\t\t</StyledBreadcrumbsBox>\r\n\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default React.memo(Breadcrumbs);","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nexport interface ICartDateBox {\r\n\tbdColor?: string;\r\n\theigthBox?: string;\r\n\tisOnlyBdColor?: boolean;\r\n};\r\n\r\nconst StyledDateCartBox = styled.div<ICartDateBox>`\r\n\twidth: 100%;\r\n\theight:${props => props.heigthBox};\r\n\tborder: 2px solid ${props => props.bdColor || props.theme.color.cardBorder || '#EAEAF0'};\r\n\tcolor:${props => props.isOnlyBdColor ? props.theme.color.text.main : props.bdColor || props.theme.color.text.second || '#838688'};\r\n\tborder-radius: 5px;\r\n\tdisplay: flex;\r\n\talign-items:center;\r\n\tpadding:0 10px 0 ${props => props.isOnlyBdColor ? '0' : '20px'};\r\n\ttransition: all 0.3s ease 0s;\r\n\t@media ${props => props.theme.media?.tablet || '(min-width: 767.98px)'} {\r\n\t\theight:48px;\r\n\t};\r\n\r\n`;\r\n\r\n// stylized boxing boxes in the basket\r\nconst CartDateBox: FC<ICartDateBox> = ({ bdColor = '', heigthBox = '48px', isOnlyBdColor = false, children }) => {\r\n\r\n\r\n\treturn (\r\n\t\t<StyledDateCartBox bdColor={bdColor} heigthBox={heigthBox} isOnlyBdColor={isOnlyBdColor}>\r\n\t\t\t{children}\r\n\t\t</StyledDateCartBox>\r\n\t);\r\n};\r\n\r\nexport default CartDateBox;","\r\nimport { useField } from 'formik';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useAppSelector } from '../../../../redux/hooks';\r\nimport { selectDateMonDayText } from '../../../../redux/LanguageSlice';\r\nimport { useFocusedField } from '../../../../utilits/hooks';\r\nimport CartDateBox from '../../CartDateBox';\r\nimport { InputAttrProps } from '../CartDeliveryForm';\r\nimport { StyledTitleDateBox } from '../SelectCity/SelectCityContainer';\r\n\r\ninterface IDeliveryDateBoxContainer {\r\n\tdateMinMax: string[];\r\n\ttitle: string;\r\n};\r\n\r\n\r\nexport const StyledInputBox = styled.div`\r\n\tposition: relative;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n`;\r\nconst StyledInputDateInput = styled.input`\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\t opacity:0; \r\n\t&::-webkit-calendar-picker-indicator{\r\n\t\tbackground-color:red;\r\n\t\twidth: 100%;\r\n\t\tcursor: pointer;\r\n\t}\r\n`;\r\nexport const StyledInputDateMask = styled.div`\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: flex;\r\n\talign-items:center;\r\n\tcolor: ${props => props.theme.color.text.main};\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: calc(100% - 0.25em) 50%;\r\n\tbackground-size: 0.85em auto;\r\n\tbackground-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 80 80'%3E%3Cpath d='M70.3 13.8L40 66.3 9.7 13.8z' fill='%23000'%3E%3C/path%3E%3C/svg%3E\");\r\n\tpointer-events: none;\r\n\tz-index:10;\r\n`;\r\n//Delivery Day component\r\nconst DeliveryDateBoxContainer = ({ title, dateMinMax, ...props }: IDeliveryDateBoxContainer & InputAttrProps) => {\r\n\tconst [field, meta] = useField({ ...props, type: 'date', });\r\n\tconst dateText = useAppSelector(selectDateMonDayText)!;\r\n\t//formates the date for the output\r\n\tconst fieldDate = new Date(field.value);\r\n\tconst dayofDifferent: number = fieldDate.getDate() - new Date().getDate();\r\n\tconst dayW: string = (dayofDifferent + 1 <= dateText.futureDays.length) ?\r\n\t\tdateText.futureDays[dayofDifferent] + ', ' : '';\r\n\tconst dateElem: string = `${dayW}${fieldDate.getDate()} ${dateText.month[fieldDate.getMonth()]},\r\n\t ${dateText.day[fieldDate.getDay()]}`;\r\n\r\n\tsessionStorage.setItem(field.name, field.value);\r\n\r\n\tconst [isFocus, onFocusFn] = useFocusedField(field.onBlur);\r\n\r\n\tconst brdColor = meta.error && meta.touched ? '#F15152' : isFocus ? '#838688' : ''\r\n\r\n\treturn (<div>\r\n\t\t<StyledTitleDateBox>{title}</StyledTitleDateBox>\r\n\t\t<CartDateBox bdColor={brdColor}>\r\n\t\t\t<StyledInputBox>\r\n\t\t\t\t<StyledInputDateInput type=\"date\" {...field} {...props} {...onFocusFn} min={dateMinMax[0]} max={dateMinMax[1]} />\r\n\t\t\t\t<StyledInputDateMask  >{dateElem}</StyledInputDateMask>\r\n\t\t\t</StyledInputBox>\r\n\t\t</CartDateBox>\r\n\t</div>\r\n\t);\r\n};\r\n\r\nexport default React.memo(DeliveryDateBoxContainer);","import { ErrorMessage, useField } from 'formik';\r\nimport React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useFocusedField } from '../../../../utilits/hooks';\r\nimport { validateSelectIsEnpty } from '../../../../utilits/validators';\r\nimport { IUseStateCartDeliveryForm } from '../../Cart';\r\nimport CartDateBox from '../../CartDateBox';\r\nimport { SelectAttrProps } from '../CartDeliveryForm';\r\nimport { StyledInputBox, StyledInputDateMask } from '../DeliveryDateBox/DeliveryDateBoxContainer';\r\n\r\ninterface ICartFormRadio {\r\n\tcityName?: string;\r\n};\r\n\r\n\r\ninterface ISelectCityContainer extends IUseStateCartDeliveryForm, ICartFormRadio {\r\n\toption?: string[];\r\n\ttitle?: string;\r\n\tplacholderText?: string;\r\n\toptionPlus?: [string, number][];\r\n\tpriseDelivery?: string;\r\n\tisStorage?: boolean;\r\n\r\n};\r\nexport const StyledCitySelect = styled.select`\r\n\topacity:0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\t\r\n\t\tcolor:${props => props.theme.color.text.second || '#838688'};\r\n\t\r\n`;\r\n\r\n\r\nexport const StyledTitleDateBox = styled.div`\r\n\tmargin-bottom:8px;\r\n`;\r\nexport const StyledErrorMessage = styled.div`\r\n\tfont-size:12px;\r\n\tfont-weight:700;\r\n\tcolor:${props => props.theme.color.red || '#F15152'};\r\n\tz-index:30;\r\n\t\r\n`;\r\nconst StyledPriseText = styled.span`\r\n\tcolor:${props => props.theme.color.text.second || '#838688'};\r\n`;\r\n\r\n\r\n// component of the type of Select to the form of a dozen\r\nconst SelectCityContainer = ({ option, title, placholderText, optionPlus,\r\n\tpriseDelivery, setDeliveryPreise, cityName, isStorage = true,\r\n\t...props }: ISelectCityContainer & SelectAttrProps) => {\r\n\r\n\r\n\tconst [field, meta] = useField({ ...props, validate: props.validate || validateSelectIsEnpty });\r\n\r\n\r\n\t//set the delivery price format\r\n\tconst getPriseFormat = (prise: number, text: string = 'free'): string =>\r\n\t\tprise ? ` (${prise.toFixed(2) + '€'})` : ` (${text})`;\r\n\r\n\t// List output for the list Select\r\n\tconst getOptionElemrnt = (option?: string[], optionPlus?: [string, number][]): JSX.Element[] | null => {\r\n\t\tif (!option && !optionPlus) return null;\r\n\t\tif (optionPlus) return optionPlus!.map((e, i) =>\r\n\t\t\t<option value={e[0]} key={e[0] + i}>{e[0]}{getPriseFormat(e[1], priseDelivery)}</option>);\r\n\r\n\r\n\r\n\t\tconst res = field.name === 'paymentMethod' || 'payMethod' || 'deliveryMethod' ?\r\n\t\t\toption!.map((e, i) => <option value={e} key={e + i}>{e}</option>) :\r\n\t\t\toption!.sort().map((e, i) => <option value={e} key={e + i}>{e}</option>);\r\n\t\treturn res;\r\n\t};\r\n\r\n\t// We form a text for show \r\n\r\n\tconst valueText: string = field.value;\r\n\tconst arr: [string, number] | null = optionPlus ? optionPlus!.filter(e => e[0] === valueText)[0] : null;\r\n\tconst inputDate: JSX.Element = arr ?\r\n\t\t<span>{valueText}<StyledPriseText> {`${getPriseFormat(arr[1], priseDelivery)}`}</StyledPriseText></span>\r\n\t\t: <span>{valueText || placholderText || title}</span>;\r\n\r\n\tisStorage && sessionStorage.setItem(field.name, valueText);\r\n\r\n\t// We set the delivery price\r\n\tuseEffect(() => { arr && setDeliveryPreise !== undefined && setDeliveryPreise(arr[1]) }, [arr]);\r\n\r\n\tconst [isFocus, onFocusFn] = useFocusedField(field.onBlur);\r\n\r\n\tconst brdColor = meta.error && meta.touched ? '#F15152' : isFocus ? '#838688' : '';\r\n\r\n\r\n\treturn (<div>\r\n\t\t<StyledTitleDateBox>{title}</StyledTitleDateBox>\r\n\t\t<CartDateBox bdColor={brdColor}>\r\n\t\t\t<StyledInputBox>\r\n\t\t\t\t<StyledCitySelect  {...field} {...props} {...onFocusFn}>\r\n\t\t\t\t\t<option value='' disabled>{placholderText || title}</option>\r\n\t\t\t\t\t{getOptionElemrnt(option, optionPlus)}\r\n\t\t\t\t</StyledCitySelect>\r\n\t\t\t\t<StyledInputDateMask>{inputDate}</StyledInputDateMask>\r\n\t\t\t</StyledInputBox>\r\n\t\t</CartDateBox>\r\n\t\t<StyledErrorMessage>\t<ErrorMessage name={field.name} /></StyledErrorMessage>\r\n\t</div>\r\n\r\n\t);\r\n};\r\n\r\nexport default React.memo(SelectCityContainer);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useAppSelector } from '../../redux/hooks';\r\nimport { selectFavotitsText } from '../../redux/LanguageSlice';\r\nimport { openPopUp } from '../../redux/LoginSlice';\r\nimport { changeIsBodyLock } from '../../redux/ModalSlice';\r\nimport Button from '../Button';\r\nimport { useAppDispatch } from './../../redux/hooks';\r\n\r\n\r\nconst StyledLoginInFavoritesPageBox = styled.div`\r\n\tpadding:30px;\r\n\theight:100%;\r\n\tdisplay: flex;\r\n\tflex-direction:column;\r\n\tjustify-content:space-between;\r\n`;\r\n\r\nconst StyledText = styled.div`\r\n\tfont-weight: 700;\r\n`;\r\nconst StyledLoginBtn = styled.div`\r\n\t\r\n`;\r\n\r\nconst LoginInFavoritesPage = () => {\r\n\r\n\tconst dispatch = useAppDispatch();\r\n\tconst text = useAppSelector(selectFavotitsText);\r\n\r\n\tconst onClickLogin = () => {\r\n\t\tdispatch(openPopUp());\r\n\t\tdispatch(changeIsBodyLock(true));\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<StyledLoginInFavoritesPageBox>\r\n\t\t\t<StyledText>{text.loginText}</StyledText>\r\n\t\t\t<StyledLoginBtn><Button width='99px' onClick={onClickLogin}>{text.btnText}</Button></StyledLoginBtn>\r\n\t\t</StyledLoginInFavoritesPageBox>\r\n\t);\r\n};\r\n\r\nexport default LoginInFavoritesPage;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Favorits from '../PrivateOffice/Favorits';\r\nimport { StyledMain } from './../Main/Main';\r\nimport Container from './../Container';\r\nimport Breadcrumbs from '../Breadcrumbs/Breadcrumbs';\r\nimport { StyledBreadcrumbs, StyledDestopMenu, StyledPrivateOfficeBox, StyledTitel } from './../PrivateOffice/PrivateOffice';\r\nimport UserMenuContainer from '../Header/UserMenu/UserMenuContainer';\r\nimport LoginInFavoritesPage from './loginInFavoritesPage';\r\nimport { useAppSelector } from '../../redux/hooks';\r\nimport { selectIsLogSuccess } from '../../redux/LoginSlice';\r\nimport { useNavigate } from 'react-router';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nconst StyledFavoritesWrapper = styled.main`\r\n\twidth: 100%;\r\n`;\r\nconst StyledLoginBox = styled(StyledDestopMenu)`\r\n\t\tborder: 1px solid ${props => props.theme.color.cardBorder || '#EAEAF0'};\r\n\tborder-radius: 8px;\r\n\tmargin-left:20px;\r\n\tmax-height:\t170px;\r\n`\r\nconst Favorites = () => {\r\n\r\n\tconst isLogin = useAppSelector(selectIsLogSuccess);\r\n\tconst navigate = useNavigate()\r\n\r\n\tuseEffect(() => {\r\n\t\tisLogin && navigate('/privateOffice/favorites');\r\n\t}, [isLogin])\r\n\r\n\r\n\tconst text = ['Home', 'Favorites'];\r\n\treturn (\r\n\r\n\t\t<StyledMain>\r\n\t\t\t<Container>\r\n\r\n\t\t\t\t<StyledPrivateOfficeBox>\r\n\t\t\t\t\t<StyledBreadcrumbs>\r\n\t\t\t\t\t\t<Breadcrumbs text={text} />\r\n\t\t\t\t\t</StyledBreadcrumbs>\r\n\r\n\t\t\t\t\t<StyledTitel>{'Favorites'}</StyledTitel>\r\n\t\t\t\t\t<StyledLoginBox>\r\n\t\t\t\t\t\t<LoginInFavoritesPage />\r\n\t\t\t\t\t</StyledLoginBox>\r\n\r\n\r\n\t\t\t\t\t<StyledFavoritesWrapper>\r\n\t\t\t\t\t\t<Favorits />\r\n\t\t\t\t\t</StyledFavoritesWrapper>\r\n\r\n\r\n\r\n\r\n\t\t\t\t</StyledPrivateOfficeBox>\r\n\t\t\t</Container>\r\n\t\t</StyledMain>\r\n\t);\r\n};\r\n\r\nexport default Favorites;","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport AutoSubmitForFromik from '../utilits/AutoSubmitForFromik';\r\nimport CartDateBox from './Cart/CartDateBox';\r\nimport { SelectAttrProps } from './Cart/Delivery/CartDeliveryForm';\r\nimport { StyledInputBox, StyledInputDateMask } from './Cart/Delivery/DeliveryDateBox/DeliveryDateBoxContainer';\r\nimport { StyledCitySelect } from './Cart/Delivery/SelectCity/SelectCityContainer';\r\n\r\nconst SelectTypeFilter = ({ itemTypeName, isLangChange, ...props }: { itemTypeName: string[], isLangChange: boolean, } & SelectAttrProps) => {\r\n\tconst [field] = useField(props);\r\n\r\n\r\n\tconst optionElem: JSX.Element[] = itemTypeName.map((e, i) => <option key={e + i} value={e}>{e} </option>);\r\n\treturn (\r\n\t\t<CartDateBox >\r\n\t\t\t<StyledInputBox>\r\n\t\t\t\t<StyledCitySelect  {...field} {...props}>\t{optionElem}</StyledCitySelect>\r\n\t\t\t\t<StyledInputDateMask>{field.value}</StyledInputDateMask>\r\n\t\t\t</StyledInputBox>\r\n\t\t\t<AutoSubmitForFromik isSubmit={isLangChange} />\r\n\t\t</CartDateBox>\r\n\r\n\t);\r\n\r\n};\r\n\r\nexport default SelectTypeFilter;","import React, { FC, useState } from 'react';\r\n\r\nimport { Form, Formik } from 'formik';\r\nimport styled from 'styled-components';\r\n\r\nimport SelectTypeFilter from './SelectTypeFilter';\r\nimport { useAppSelector } from '../redux/hooks';\r\nimport { selectActivLng } from './../redux/LanguageSlice';\r\nimport { useEffect } from 'react';\r\n\r\n\r\ninterface IItemTypeFilter {\r\n\titemType: string[];\r\n\tsetSelectedItemType: React.Dispatch<React.SetStateAction<string>>;\r\n};\r\nconst StyledForm = styled(Form)`\r\n\twidth:100%;\r\n\t\r\n`;\r\n\r\nconst ItemTypeFilter: FC<IItemTypeFilter> = ({ itemType, setSelectedItemType }) => {\r\n\r\n\tconst [isLangChange, setIsLangChange] = useState(false);\r\n\r\n\tconst aktivLang = useAppSelector(selectActivLng);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetIsLangChange(true);\r\n\t}, [aktivLang]);\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={{ filterType: itemType[0], }}\r\n\t\t\tonSubmit={(values, actions) => {\r\n\r\n\t\t\t\tif (isLangChange) {\r\n\t\t\t\t\tactions.resetForm();\r\n\t\t\t\t\tsetIsLangChange(false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetSelectedItemType(values.filterType)\r\n\t\t\t\t}\r\n\r\n\t\t\t}}>\r\n\t\t\t{() => (\r\n\t\t\t\t<StyledForm>\r\n\t\t\t\t\t<SelectTypeFilter name='filterType' itemTypeName={itemType} isLangChange={isLangChange} />\r\n\t\t\t\t</StyledForm>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\nexport default React.memo(ItemTypeFilter);","import React, { FC, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { IItemData, selectitemsData } from '../redux/ItemSlice';\r\nimport { selectFavotitsPrivatOfficeText, selectFavotitsSortText, selectItemHitBannersText, selectItemNewBannersText, selectLangStiringsHeaderCatalogMenu } from '../redux/LanguageSlice';\r\nimport { changeFirstSimbolToUpperCase, getDiscountPrise } from '../utilits/functions';\r\nimport ItemsContainer from './Main/Items/ItemsContainer';\r\nimport ItemTypeFilter from './ItemTypeFilter';\r\nimport { useAppSelector } from '../redux/hooks';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nexport type IGetFunItem = (items: [] | IItemData[]) => [] | IItemData[];\r\ninterface IGetFunObj { [x: string]: IGetFunItem; }\r\n\r\n\r\n\r\nconst StyledFavoriteBox = styled.div`\r\n\tposition: relative;\r\n\t@media ${props => props.theme.media?.desktop || '(width >= 991.98px)'} {\r\n\t\tmargin:0 20px;\r\n\t};\r\n\t\r\n`;\r\n\r\nconst StyledItemTypeFilterBox = styled.div`\r\n\tpadding: 0 20px;\r\n\tmargin-bottom:20px;\r\n\t@media ${props => props.theme.media?.tablet || '(width >= 767.98px)'} {\r\n\t\t/* padding: 0 0 0 20px; */\r\n\t\tmargin-bottom: 0px;\r\n\t\twidth:240px;\r\n\t};\r\n\t@media ${props => props.theme.media?.desktop || '(width >= 991.98px)'} {\r\n\t\tpadding: 0 ;\r\n\t};\r\n`;\r\n\r\nconst StyledItemsContainer = styled.div`\r\n\tpadding: 0 20px;\r\n\r\n\t@media ${props => props.theme.media?.desktop || '(width >= 991.98px)'} {\r\n\t\tpadding: 0 ;\r\n\t};\r\n`;\r\nconst StyledFilterWraper = styled.div`\r\n@media ${props => props.theme.media?.tablet || '(width >= 767.98px)'} {\r\n\tdisplay: flex;\r\n\tjustify-content:space-between;\r\n\tmargin-bottom:20px;\r\n\t};\r\n`\r\n\r\nconst ShowItemsWithFiltAndSort: FC<{ itemsDataList: string[] }> = ({ itemsDataList }) => {\r\n\r\n\tconst itemsData = useAppSelector(selectitemsData);\r\n\tconst bannerNewText = useAppSelector(selectItemNewBannersText);\r\n\tconst bannerHittext = useAppSelector(selectItemHitBannersText);\r\n\tconst objItemType = useAppSelector(selectLangStiringsHeaderCatalogMenu);//\r\n\tconst defaultType = useAppSelector(selectFavotitsPrivatOfficeText);\r\n\tconst sortTerms = useAppSelector(selectFavotitsSortText).terms.map(e => changeFirstSimbolToUpperCase(e));\r\n\t// We transform the text- only the first letter title\r\n\tconst defaultItemType = changeFirstSimbolToUpperCase(defaultType.allGoods);//\r\n\tconst newItemType = changeFirstSimbolToUpperCase(bannerNewText);//\r\n\tconst hitItemType = changeFirstSimbolToUpperCase(bannerHittext);//\r\n\t//We create an object key - type of product, value - Filter function for this product\r\n\r\n\r\n\t// The type of element is thrown in the filter\r\n\tconst [selectetItemType, setSelectedItemType] = useState(defaultItemType);\r\n\t// Types of sorting conditions\r\n\tconst [selectetSortType, setSelectetSortType] = useState(sortTerms[0]);\r\n\r\n\r\n\r\n\r\n\tconst getNewItem: IGetFunItem = (items) =>\r\n\t\titems.length === 0 ? items : items.filter(e => e.newitem);\r\n\tconst getHitItem: IGetFunItem = (items) =>\r\n\t\titems.length === 0 ? items : items.filter(e => e.salehit);\r\n\tconst getTypeItem = (itemType: string): IGetFunItem => (items) =>\r\n\t\titems.length === 0 ? items : items.filter(e => e.itemType === itemType);\r\n\t//------------------\r\n\tlet actionsItemType: IGetFunObj = {\r\n\t\t[defaultItemType]: (items) => items,\r\n\t\t[newItemType]: getNewItem,\r\n\t\t[hitItemType]: getHitItem,\r\n\t};\r\n\tfor (const key in objItemType) {\r\n\t\tactionsItemType = {\r\n\t\t\t...actionsItemType,\r\n\t\t\t[changeFirstSimbolToUpperCase(objItemType[key])]: getTypeItem(`${key}`),\r\n\t\t}\r\n\t};\r\n\t// console.log(defaultItemType);\r\n\t// console.log(actionsItemType);\r\n\t//----------------------\r\n\t// Object where the key is the type of sorting. Value- Function for Finding\r\n\tconst actionSortType: IGetFunObj = {\r\n\t\t[sortTerms[0]]: (items) =>\r\n\t\t\titems.length === 0 ? items : items.sort((a, b) => (getDiscountPrise(b.prise, b.discount) - getDiscountPrise(a.prise, a.discount))),\r\n\t\t[sortTerms[1]]: (items) =>\r\n\t\t\titems.length === 0 ? items : items.sort((a, b) => (getDiscountPrise(a.prise, a.discount) - getDiscountPrise(b.prise, b.discount))),\r\n\t\t[sortTerms[2]]: (items) =>\r\n\t\t\titems.length === 0 ? items : items.sort((a, b) => (+b.starts - (+a.starts))),\r\n\t\t[sortTerms[3]]: (items) =>\r\n\t\t\titems.length === 0 ? items : items.sort((a, b) => (+b.reviews - (+a.reviews))),\r\n\r\n\t};\r\n\t//--------------------------\r\n\r\n\r\n\r\n\t// An array of elected goods\r\n\tconst favoritedItems: IItemData[] = itemsDataList.map((e) => itemsData.filter(el => el.id === e)[0]);\r\n\r\n\t// Choosing types of goods that are in the elect\r\n\r\n\tconst itemTypeList: string[] = [defaultItemType,];\r\n\tfavoritedItems.find(e => e.newitem === true) && itemTypeList.push(newItemType);\r\n\tfavoritedItems.find(e => e.salehit === true) && itemTypeList.push(hitItemType);\r\n\r\n\tconst favoriteItemType = new Set<string>(itemTypeList);\r\n\tfavoritedItems.forEach(e => { favoriteItemType.add(objItemType[e.itemType]) });\r\n\r\n\tconst favoriteItemTypeArr = Array.from(favoriteItemType)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t//------------------------------------------------------\r\n\r\n\r\n\r\n\t// List of goods after filtering\r\n\tconst itemsFilter = actionsItemType[selectetItemType] ? actionsItemType[selectetItemType](favoritedItems) : favoritedItems;\r\n\r\n\t// array of goods for display\r\n\tconst items = actionSortType[selectetSortType] ? (actionSortType[selectetSortType](itemsFilter)) : itemsFilter;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<StyledFavoriteBox>\r\n\t\t\t<StyledFilterWraper>\r\n\t\t\t\t<StyledItemTypeFilterBox>\r\n\t\t\t\t\t<ItemTypeFilter itemType={favoriteItemTypeArr} setSelectedItemType={setSelectedItemType} />\r\n\t\t\t\t</StyledItemTypeFilterBox>\r\n\t\t\t\t<StyledItemTypeFilterBox>\r\n\t\t\t\t\t<ItemTypeFilter itemType={sortTerms} setSelectedItemType={setSelectetSortType} />\r\n\t\t\t\t</StyledItemTypeFilterBox>\r\n\t\t\t</StyledFilterWraper>\r\n\t\t\t<StyledItemsContainer>\r\n\t\t\t\t<ItemsContainer iData={items} isViewAllItem={true} />\r\n\t\t\t</StyledItemsContainer>\r\n\t\t</StyledFavoriteBox>\r\n\t);\r\n};\r\n\r\nexport default ShowItemsWithFiltAndSort;","import React, { useState } from 'react';\r\nimport { selectFavoritedItem } from '../../redux/ActionSlice';\r\nimport { useAppSelector } from '../../redux/hooks';\r\nimport ShowItemsWithFiltAndSort from '../showItemsWithFiltAndSort';\r\n\r\nconst Favorits = () => {\r\n\tconst itemsFavorite = useAppSelector(selectFavoritedItem);\r\n\r\n\treturn <ShowItemsWithFiltAndSort itemsDataList={itemsFavorite} />\r\n}\r\n\r\nexport default Favorits;","import React from 'react';\r\n\r\nconst News = React.lazy(() => import('../InDeveloping/News/News'));\r\nconst GeneralInformation = React.lazy(() => import('../PrivateOffice/GeneralInformation'));\r\nconst PersonalData = React.lazy(() => import('../PrivateOffice/PersonalData'));\r\nconst ChangePasswort = React.lazy(() => import('../PrivateOffice/ChangePasswort'));\r\nconst Favorits = React.lazy(() => import('../PrivateOffice/Favorits'));\r\n\r\n\r\nexport const routePrivOff = [\r\n\t{ path: '', Component: GeneralInformation, linkText: 'General information', },\r\n\t{ path: 'generalInformation', Component: GeneralInformation, linkText: 'General information', },\r\n\t{ path: 'personalData', Component: PersonalData, linkText: 'Personal data', },\r\n\t{ path: 'shoppingHistory', Component: News, linkText: 'Shopping history', },\r\n\t{ path: 'favorites', Component: Favorits, linkText: 'Favorites', },\r\n\t{ path: 'changePassword', Component: ChangePasswort, linkText: 'Change password', },\r\n];","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Routes, useLocation } from 'react-router-dom';\r\n\r\nimport { routePrivOff } from './privOfRoutObj';\r\nimport getRouteElement from '../HOC/RouteComponent';\r\nimport UserMenuContainer from '../Header/UserMenu/UserMenuContainer';\r\n\r\nimport Container from '../Container';\r\nimport { StyledMain } from '../Main/Main';\r\n\r\nimport Breadcrumbs from '../Breadcrumbs/Breadcrumbs';\r\n\r\n\r\n\r\n\r\nexport const StyledPrivateOfficeBox = styled.div`\r\n\twidth:100%;\r\n\tmargin-top: 20px;\r\n\tdisplay: grid;\r\n\trow-gap:20px;\r\n\t@media ${props => props.theme.media?.desktop || '(width >= 991.98px)'} {\r\n\t\tmargin-top: 30px;\r\n\t\trow-gap:30px;\r\n\t\tgrid-template-columns: minmax(0,305px) 1fr;\r\n\t\tgrid-template-rows: 20px auto  1fr;\r\n\t\t\r\n\t};\r\n\r\n`;\r\n\r\nexport const StyledBreadcrumbs = styled.div`\r\n\tpadding-left:20px;\r\n\t@media ${props => props.theme.media?.desktop || '(width >= 991.98px)'} {\r\n\t\tgrid-column:1/3;\r\n\t};\r\n\r\n`;\r\n\r\n\r\nexport const StyledDestopMenu = styled.div`\r\n\tdisplay:none;\r\n\t@media ${props => props.theme.media?.desktop || '(width >= 991.98px)'} {\r\n\t\tdisplay:block;\r\n\t\t\r\n\t};\r\n`;\r\n\r\nexport const StyledTitel = styled(StyledBreadcrumbs)`\r\n\t\r\n\tfont-weight: 700;\r\n\tfont-size: 24px;\r\n\t@media ${props => props.theme.media?.tablet || '(width >= 767.98px)'} {\r\n\t\tfont-size: 28px;\r\n\t\t\r\n\t};\r\n\t@media ${props => props.theme.media?.desktop || '(width >= 991.98px)'} {\r\n\t\tfont-size: 36px;\r\n\t};\r\n`;\r\n\r\nconst PrivateOffice = () => {\r\n\r\n\r\n\tconst urlArr = useLocation().pathname.split('/');\r\n\tconst urlLast = urlArr.length > 2 ? routePrivOff.filter(e => e.path === urlArr[2])[0].linkText : '';\r\n\tconst text = ['Home', 'Privat Office', urlLast];\r\n\r\n\treturn (\r\n\r\n\t\t<StyledMain>\r\n\t\t\t<Container>\r\n\t\t\t\t<StyledPrivateOfficeBox>\r\n\r\n\t\t\t\t\t<StyledBreadcrumbs>\r\n\t\t\t\t\t\t<Breadcrumbs text={text} />\r\n\t\t\t\t\t</StyledBreadcrumbs>\r\n\r\n\t\t\t\t\t<StyledTitel>{urlLast}</StyledTitel>\r\n\r\n\t\t\t\t\t<StyledDestopMenu>\r\n\t\t\t\t\t\t<UserMenuContainer />\r\n\t\t\t\t\t</StyledDestopMenu>\r\n\r\n\t\t\t\t\t<Routes>\r\n\t\t\t\t\t\t{getRouteElement(routePrivOff)}\r\n\t\t\t\t\t</Routes>\r\n\r\n\t\t\t\t</StyledPrivateOfficeBox>\r\n\t\t\t</Container>\r\n\t\t</StyledMain>\r\n\r\n\t);\r\n};\r\n\r\nexport default PrivateOffice;\r\n","import React from 'react';\r\nimport { useFormikContext } from \"formik\";\r\nimport { useEffect } from \"react\";\r\n\r\n// Automatic sending of the form (for Formik)\r\nconst AutoSubmit = ({ isSubmit = true }: { isSubmit?: boolean }) => {\r\n\tconst { values, submitForm } = useFormikContext();\r\n\tuseEffect(() => {\r\n\t\tsubmitForm();\r\n\r\n\t}, [values, submitForm, isSubmit]);\r\n\treturn null;\r\n};\r\n\r\nexport default React.memo(AutoSubmit)","\r\nimport { useState } from 'react';\r\n\r\n// Hook that returns an array of two elements 1- brown value if the focus on the element or not\r\n// 2 an object of two functions onblur and onfocus that change the value of 1, depending on is the focus not an element or not\r\n// Hook accepts two arguments 1- DOP Function for the Onblur 2 - additional function for ONFOCUS\r\n\r\nexport const useFocusedField = (obBlurFn?: (e: React.FocusEvent<any, Element>) => void, onFocusFn?: (e: React.FocusEvent<any, Element>) => void,)\r\n\t: [boolean, { onBlur: (e: React.FocusEvent<HTMLInputElement>) => void, onFocus: (e: React.FocusEvent<HTMLInputElement>) => void }] => {\r\n\tconst [isActive, setIsActive] = useState(false);\r\n\r\n\treturn [isActive, {\r\n\t\tonBlur: (e: React.FocusEvent<HTMLInputElement>) => {\r\n\t\t\tobBlurFn !== undefined && obBlurFn(e);\r\n\t\t\tsetIsActive(false);\r\n\t\t},\r\n\t\tonFocus: (e: React.FocusEvent<HTMLInputElement>) => {\r\n\t\t\tonFocusFn !== undefined && onFocusFn(e);\r\n\t\t\tsetIsActive(true);\r\n\t\t},\r\n\t}];\r\n};"],"names":["StyledBreadcrumbsBox","styled","StyledBreadcrumbsLink","Link","StyledBreadcrumbsArrow","StyledBreadcrumbsActive","props","theme","color","text","second","Breadcrumbs","link","urlPath","useLocation","pathname","linkElem","split","map","e","i","arr","textT","length","to","className","React","StyledDateCartBox","heigthBox","bdColor","cardBorder","isOnlyBdColor","main","media","tablet","children","StyledInputBox","StyledInputDateInput","StyledInputDateMask","DeliveryDateBoxContainer","title","dateMinMax","useField","type","field","meta","dateText","useAppSelector","selectDateMonDayText","fieldDate","Date","value","dayofDifferent","getDate","dayW","futureDays","dateElem","month","getMonth","day","getDay","sessionStorage","setItem","name","useFocusedField","onBlur","isFocus","onFocusFn","brdColor","error","touched","min","max","StyledCitySelect","StyledTitleDateBox","StyledErrorMessage","red","StyledPriseText","SelectCityContainer","option","placholderText","optionPlus","priseDelivery","setDeliveryPreise","cityName","isStorage","validate","validateSelectIsEnpty","getPriseFormat","prise","toFixed","valueText","filter","inputDate","useEffect","undefined","disabled","getOptionElemrnt","StyledLoginInFavoritesPageBox","StyledText","StyledLoginBtn","dispatch","useAppDispatch","selectFavotitsText","loginText","Button","width","onClick","openPopUp","changeIsBodyLock","btnText","StyledFavoritesWrapper","StyledLoginBox","StyledDestopMenu","isLogin","selectIsLogSuccess","navigate","useNavigate","Container","StyledPrivateOfficeBox","StyledBreadcrumbs","StyledTitel","Favorits","itemTypeName","isLangChange","optionElem","CartDateBox","AutoSubmitForFromik","isSubmit","StyledForm","Form","ItemTypeFilter","itemType","setSelectedItemType","useState","setIsLangChange","aktivLang","selectActivLng","initialValues","filterType","onSubmit","values","actions","resetForm","StyledFavoriteBox","desktop","StyledItemTypeFilterBox","StyledItemsContainer","StyledFilterWraper","itemsDataList","itemsData","selectitemsData","bannerNewText","selectItemNewBannersText","bannerHittext","selectItemHitBannersText","objItemType","selectLangStiringsHeaderCatalogMenu","defaultType","selectFavotitsPrivatOfficeText","sortTerms","selectFavotitsSortText","terms","changeFirstSimbolToUpperCase","defaultItemType","allGoods","newItemType","hitItemType","selectetItemType","selectetSortType","setSelectetSortType","getTypeItem","items","actionsItemType","newitem","salehit","key","actionSortType","sort","a","b","getDiscountPrise","discount","starts","reviews","favoritedItems","el","id","itemTypeList","find","push","favoriteItemType","Set","forEach","add","favoriteItemTypeArr","Array","from","itemsFilter","ItemsContainer","iData","isViewAllItem","itemsFavorite","selectFavoritedItem","News","GeneralInformation","PersonalData","ChangePasswort","routePrivOff","path","Component","linkText","urlArr","urlLast","UserMenuContainer","getRouteElement","AutoSubmit","useFormikContext","submitForm","obBlurFn","isActive","setIsActive","onFocus"],"sourceRoot":""}