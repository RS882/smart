{"version":3,"file":"static/js/946.707b8e9d.chunk.js","mappings":"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","sources":["components/Cart/BtnNext.tsx","components/Cart/Order/ItemOrderCounter.tsx","components/Cart/Order/ItemOrderCounterCountainer.tsx","components/Cart/Order/OrderItemPreise.tsx","components/Cart/Order/OrderItem.tsx","components/Cart/Order/Order.tsx","components/Cart/BtnChange.tsx","components/Cart/ShortShow.tsx","components/Cart/Order/OrderShort.tsx","components/Cart/Order/OrderContainer.tsx","components/Cart/CartMetodNotActiv.tsx","components/Cart/Total/CartTotalContainer.tsx","components/Cart/CartDateBox.tsx","components/Cart/Delivery/RadioLabel.tsx","components/Cart/Delivery/CartFormRadio.tsx","components/Cart/Delivery/DeliveryDateBox/DeliveryDateBoxContainer.tsx","components/Cart/Delivery/SelectCity/SelectCityContainer.tsx","localization/uu.ts","components/Cart/Delivery/InputText.tsx/InputTextCart.tsx","components/Cart/Delivery/PickupContainer/ShopAdress.tsx","components/Cart/Delivery/PickupContainer/PickupContainer.tsx","components/Cart/Delivery/CartDeliveryForm.tsx","components/Cart/Delivery/CartDeliveryShort.tsx","components/Cart/Delivery/CartDeliveryContainer.tsx","components/Cart/Cart.tsx"],"sourcesContent":["import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useAppSelector } from '../../redux/hooks';\r\nimport { selectCartTextBtnNext } from '../../redux/LanguageSlice';\r\nimport { ArrowFn } from '../../types/fnTypes';\r\nimport Button from '../Button';\r\nimport { IBtnStyleProps } from './BtnChange';\r\n\r\n\r\ninterface INextBtnCart extends IBtnStyleProps {\r\n\tonClickNextBtnCart?: ArrowFn;\r\n\ttype?: string;\r\n\tform?: string;\r\n\tisDisabled?: boolean;\r\n}\r\n\r\nconst StyledBtnNext = styled.div`\r\n\tpadding-bottom:25px;\r\n\tborder-bottom: 1px solid ${props => props.theme.color.divider || '#C8CACB'};\r\n\t@media ${props => props.theme.media?.tablet || '(min-width: 767.98px)'} {\r\n\t\twidth:200px;\r\n\t\tmargin-bottom:20px;\r\n\t\tborder-bottom: 1px solid transparent;\r\n\t};\r\n\r\n`;\r\n// Component NEXT button\r\nconst BtnNext: FC<INextBtnCart> = ({ onClickNextBtnCart, type = 'button', form, isDisabled = false, ...props }) => {\r\n\tconst btnNextText = useAppSelector(selectCartTextBtnNext);\r\n\r\n\treturn (\r\n\t\t<StyledBtnNext>\r\n\t\t\t<Button width='100%' height='48px' onClick={onClickNextBtnCart} disabled={isDisabled}\r\n\t\t\t\ttype={type} form={form || ''}>{btnNextText}\r\n\t\t\t</Button>\r\n\t\t</StyledBtnNext>\r\n\t);\r\n};\r\n\r\nexport default React.memo(BtnNext);","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\ninterface IMinus {\r\n\tisBlack?: boolean;\r\n};\r\ninterface IItemOrderCounter extends IMinus {\r\n\titemCount: number;\r\n\tplusOne: () => void;\r\n\tminusOne: () => void;\r\n\r\n};\r\n\r\n\r\nconst StyledItemOrderCountContaoner = styled.div`\r\n\r\n\tdisplay: flex;\r\n\tjustify-content:center;\r\n\talign-items:center;\r\n`;\r\n\r\nconst StyledBtnConter = styled.button.attrs<IMinus>(props => ({ disabled: props.isBlack, })) <IMinus>`\r\n\twidth:20px;\r\n\theight: 20px;\r\n\tdisplay: flex;\r\n\tjustify-content:center;\r\n\talign-items:center;\r\n\tmargin-right:5px;\r\n\tposition:relative;\r\n\tcursor: ${props => props.isBlack ? 'auto' : 'pointer'};\r\n`;\r\n\r\nconst StyledMinus = styled.span <IMinus>`\r\n\tposition:absolute;\r\n\twidth:70%;\r\n\theight:1px;\r\n\tbackground-color:${props => props.isBlack ? '#000' : props.theme.color.divider || '#C8CACB'};;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\ttransform:translateX(-50%);\r\n\t\r\n`;\r\n\r\nconst StyledPlus = styled.span`\r\n\tposition:absolute;\r\n\theight:70%;\r\n\twidth:1px;\r\n\tbackground-color:#000;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\ttransform:translate(-50%,-50%);\r\n`;\r\n\r\nconst StyledCount = styled.div`\r\n\twidth:48px;\r\n\theight: 48px;\r\n\tborder: 1px solid ${props => props.theme.color.divider || '#C8CACB'};\r\n\tborder-radius: 8px;\r\n\tfont-size: 16px;\r\n\tline-height: 130%;\r\n\tdisplay: flex;\r\n\tjustify-content:center;\r\n\talign-items:center;\r\n\tmargin-right:5px;\r\n`;\r\n\r\n\r\n\r\nconst ItemOrderCounter: FC<IItemOrderCounter> = ({ itemCount, plusOne, minusOne }) => {\r\n\r\n\treturn (\r\n\t\t<StyledItemOrderCountContaoner>\r\n\t\t\t<StyledBtnConter onClick={minusOne} isBlack={itemCount == 1}><StyledMinus isBlack={itemCount !== 1} /></StyledBtnConter>\r\n\t\t\t<StyledCount>{itemCount}</StyledCount>\r\n\t\t\t<StyledBtnConter onClick={plusOne} isBlack={false}><StyledMinus isBlack={true} /><StyledPlus /></StyledBtnConter>\r\n\t\t</StyledItemOrderCountContaoner>\r\n\t);\r\n};\r\n\r\nexport default React.memo(ItemOrderCounter);","import React, { FC } from 'react';\r\nimport ItemOrderCounter from './ItemOrderCounter';\r\nimport { useAppDispatch } from './../../../redux/hooks';\r\nimport { addItemToCart, delItemToCart } from '../../../redux/ActionSlice';\r\nimport styled from 'styled-components';\r\n\r\nexport interface IItemOrderCounterCountainer {\r\n\titemCount: number;\r\n\titemId: string;\r\n\r\n};\r\n\r\nconst StyledItemOrderCounter = styled.div`\r\n\tgrid-row:2/3;\r\n\tgrid-column:3/5;\r\n\tjustify-self: end;\r\n\talign-self: end;\r\n\t@media ${props => props.theme.media?.tablet || '(min-width: 767.98px)'} {\r\n\t\tjustify-self: center;\r\n\t\talign-self: center;\r\n\t};\r\n`;\r\n\r\nconst ItemOrderCounterCountainer: FC<IItemOrderCounterCountainer> = ({ itemCount, itemId }) => {\r\n\r\n\tconst dispatch = useAppDispatch()\r\n\t// function adding 1 unit of goods to the basket\r\n\tconst plusOne = () => { dispatch(addItemToCart(itemId)) };\r\n\t// Function of removal 1 unit of goods from the basket\r\n\tconst minusOne = () => { dispatch(delItemToCart(itemId)) };\r\n\treturn (\r\n\t\t<StyledItemOrderCounter>\r\n\t\t\t<ItemOrderCounter itemCount={itemCount} plusOne={plusOne} minusOne={minusOne} />\r\n\t\t</StyledItemOrderCounter>\r\n\t);\r\n};\r\n\r\nexport default ItemOrderCounterCountainer;","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport PriseContainer from '../../Main/Items/Prise/PriseContainer';\r\n\r\nimport { IItemOrderProps } from './OrderItem';\r\n\r\n\r\n\r\nconst StyledOrderItemPreise = styled.div`\r\n\t\r\n\tgrid-row:2/3;\r\n\tgrid-column:1/3;\r\n\tjustify-self: center;\r\n\t@media ${props => props.theme.media?.tablet || '(min-width: 767.98px)'} {\r\n\t\tjustify-self: center;\r\n\t};\r\n`;\r\n\r\nconst OrderItemPreise: FC<IItemOrderProps> = ({ itemCount, item }) => {\r\n\r\n\r\n\treturn (\r\n\t\t<StyledOrderItemPreise>\r\n\t\t\t<PriseContainer prise={+item.prise * itemCount + ''} discount={item.discount} isOrder={true} />\r\n\t\t</StyledOrderItemPreise>\r\n\t);\r\n};\r\n\r\nexport default OrderItemPreise;","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport { IItemData } from '../../../redux/ItemSlice';\r\nimport ItemOrderCounterCountainer from './ItemOrderCounterCountainer';\r\nimport OrderItemPreise from './OrderItemPreise';\r\n\r\nexport interface IItemOrderProps {\r\n\titem: IItemData;\r\n\titemCount: number;\r\n};\r\n\r\ninterface IOrderItemPros extends IItemOrderProps {\r\n\tonClickTrashCan: (id: string) => void;\r\n\tonClickItem: (id: string) => void;\r\n};\r\n\r\n\r\nexport const ImgStyled = styled.img.attrs(props => ({\r\n\talt: \"order item image\",\r\n\tsrc: props.src\r\n}))`\r\n\twidth: 100%;\r\n\theight:100%;\r\n\tborder-radius:4px;\r\n`;\r\n\r\nconst StyledImg = styled.div`\r\n\tflex: 1 0 40px;\r\n\twidth: 40px;\r\n\theight:40px;\r\n\tmargin-right:10px;\r\n\t@media ${props => props.theme.media?.tablet || '(min-width: 767.98px)'} {\r\n\t\tflex: 1 0 80px;\r\n\t\twidth: 80px;\r\n\t\theight:80px;\r\n\t\tmargin-right:20px;\r\n\t};\r\n\t\r\n`;\r\n\r\nconst StyledItemName = styled.div`\r\n\tfont-size: 14px;\r\n\t@media ${props => props.theme.media?.tablet || '(min-width: 767.98px)'} {\r\n\t\tfont-size: 16px;\r\n\t\tmax-width:280px;\r\n\t};\r\n`;\r\n\r\nconst StyledOrderItemContainer = styled.button`\r\n\tgrid-row:1/2;\r\n\tgrid-column:1/4;\r\n\tdisplay: flex;\r\n\ttext-align:start;\r\n\t&:hover{\r\n\t\ttext-decoration:underline;\r\n\t}\r\n`;\r\nconst StyledOrderContainer = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-rows: repeat(2, 1fr);\r\n\tgrid-template-columns: repeat(4, 1fr);\r\n\t@media ${props => props.theme.media?.tablet || '(min-width: 767.98px)'} {\r\n\t\tdisplay: flex;\r\n\t\talign-items:center;\r\n\t\tjustify-content:space-between\r\n\t};\r\n\t\r\n`;\r\n\r\nconst StyledTrashCan = styled.button`\r\n\tcolor: ${props => props.theme.color.text.second || '#838688'};\r\n\ttransition: color 0.3s ease 0s;\r\n\tfont-size:20px;\r\n\tgrid-row:1/2;\r\n\tgrid-column:4/5;\r\n\tjustify-self: end;\r\n\talign-self: start;\r\n\tpadding:10px;\r\n\t@media ${props => props.theme.media?.tablet || '(min-width: 767.98px)'} {\r\n\t\tjustify-self: center;\r\n\t\talign-self: center;\r\n\t};\r\n\t&:hover{\r\n\t\tcolor: ${props => props.theme.color.text.main || '#070C11'};\r\n\t}\r\n`;\r\n\r\n// We form a product card in the basket\r\nconst OrderItem: FC<IOrderItemPros> = ({ item, itemCount, onClickItem, onClickTrashCan }) => {\r\n\r\n\treturn (\r\n\t\t// Block from the figure and description of the goods\r\n\t\t<StyledOrderContainer>\r\n\t\t\t<StyledOrderItemContainer onClick={() => onClickItem(item.id)}>\r\n\t\t\t\t<StyledImg>\r\n\t\t\t\t\t<ImgStyled src={item ? item.src : ''} />\r\n\t\t\t\t</StyledImg>\r\n\t\t\t\t<StyledItemName>{item.itemname} {item.itemDescription}</StyledItemName>\r\n\t\t\t</StyledOrderItemContainer >\r\n\t\t\t{/*// The amount of this product in the basket + the ability to change the quantity*/}\r\n\t\t\t<ItemOrderCounterCountainer itemCount={itemCount} itemId={item.id} />\r\n\t\t\t{/*// The price of this product*/}\r\n\t\t\t<OrderItemPreise itemCount={itemCount} item={item} />\r\n\t\t\t{/*// garbage basket- removal of goods from the basket*/}\r\n\t\t\t<StyledTrashCan className='_icon-trash_can' onClick={() => onClickTrashCan(item.id)} />\r\n\t\t</StyledOrderContainer>\r\n\t);\r\n};\r\n\r\nexport default React.memo(OrderItem);","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport { IItemData } from '../../../redux/ItemSlice';\r\nimport OrderItem from './OrderItem';\r\nimport { useAppDispatch } from './../../../redux/hooks';\r\nimport { delAllItemToCart } from '../../../redux/ActionSlice';\r\n\r\n\r\n\r\ninterface IOrderPros {\r\n\titems: IItemData[];\r\n\torderItem: string[];\r\n\tonClickItem: (id: string) => void;\r\n};\r\n\r\nconst StyledOrder = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction:column;\r\n`;\r\n\r\nconst StyledOrderElem = styled.div`\r\n\t\tpadding-top:30px;\r\n\t&:not(:last-child) {\r\n\t\tpadding:30px 0;\r\n\t\tborder-bottom: 1px solid ${props => props.theme.color.divider || '#C8CACB'};\r\n\t}\t\r\n`;\r\n\r\nconst Order: FC<IOrderPros> = ({ items, orderItem, onClickItem }) => {\r\n\tconst dispatch = useAppDispatch();\r\n\t// action when pressed on a drawing or description of the goods\r\n\r\n\t// Action when pressing the icon of the murosa basket, we remove the goods from the basket\r\n\tconst onClickTrashCan = (id: string) => {\r\n\t\tdispatch(delAllItemToCart(id))\r\n\r\n\t};\r\n\t// We form a block of elements from goods in the basket\r\n\tconst itemOredrElem: JSX.Element[] = items.map((e, i) => {\r\n\t\tconst itemCount = orderItem.filter((el) => el === e.id).length; // the amount of goods of a certain type in the basket\r\n\t\treturn (\r\n\t\t\t<StyledOrderElem key={e.itemname + i}>\r\n\t\t\t\t<OrderItem item={e} itemCount={itemCount} onClickItem={onClickItem} onClickTrashCan={onClickTrashCan} />\r\n\t\t\t</StyledOrderElem>\r\n\t\t)\r\n\t});\r\n\r\n\treturn (\r\n\t\t<StyledOrder>\r\n\t\t\t{itemOredrElem}\r\n\t\t</StyledOrder>\r\n\t);\r\n};\r\n\r\nexport default React.memo(Order);","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useAppSelector } from '../../redux/hooks';\r\nimport { selectCartTextBtnChange, selectCartTextBtnNext } from '../../redux/LanguageSlice';\r\nimport { ArrowFn } from '../../types/fnTypes';\r\nimport Button from '../Button';\r\n\r\nexport interface IBtnStyleProps {\r\n\tisBottomBd?: boolean;\r\n}\r\n\r\ninterface ICangeBtnCart extends IBtnStyleProps {\r\n\tonClickCangeBtnCart: ArrowFn;\r\n\ttype?: string;\r\n\ttextBtn?: string;\r\n\r\n}\r\n\r\nconst StyledBtnNext = styled.div<IBtnStyleProps>`\r\n\tmargin-top:20px;\r\n\tpadding-bottom:${props => props.isBottomBd ? '25px' : '0'};\r\n\tborder-bottom: 1px solid ${props => props.isBottomBd ? props.theme.color.divider || '#C8CACB' : 'transparent'};\r\n\t@media ${props => props.theme.media?.tablet || '(min-width: 767.98px)'} {\r\n\t\twidth:200px;\r\n\t\tpadding-bottom: 15px;\r\n\t\tborder-bottom: 1px solid transparent;\r\n\t\tmargin-top:0px;\r\n\t\t\r\n\t};\r\n\r\n`;\r\n// Component CHANGE button\r\nconst BtnChange: FC<ICangeBtnCart> = ({ onClickCangeBtnCart, type = 'button',\r\n\tisBottomBd = true, textBtn }) => {\r\n\tconst btnText = useAppSelector(selectCartTextBtnChange);\r\n\treturn (\r\n\t\t<StyledBtnNext isBottomBd={isBottomBd}>\r\n\t\t\t<Button width='100%' height='48px' bgColor='#fff'\r\n\t\t\t\tcolor='#4878A6' border='1px solid #4878A6'\r\n\t\t\t\thoverBgColor='#4878A6' hoverColor='#fff' type={type}\r\n\t\t\t\tonClick={onClickCangeBtnCart}>{textBtn || btnText}</Button>\r\n\t\t</StyledBtnNext>\r\n\t);\r\n};\r\n\r\nexport default React.memo(BtnChange);","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport { IItemData } from '../../redux/ItemSlice';\r\nimport { ArrowFn } from '../../types/fnTypes';\r\nimport BtnChange from './BtnChange';\r\n\r\n\r\ninterface IOrderShort {\r\n\r\n\tcangeOrderData: ArrowFn;\r\n};\r\n\r\nconst StyledOrderShortContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction:column;\r\n\tmargin-top:20px;\r\n\t@media ${props => props.theme.media?.tablet || '(min-width: 767.98px)'} {\r\n\t\tflex-direction:row;\r\n\t\tjustify-content: space-between;\r\n\t\tmargin-top:30px;\r\n\t};\r\n`;\r\n\r\n\r\nconst StyledBtnChange = styled.div`\r\n\t@media ${props => props.theme.media?.tablet || '(min-width: 767.98px)'} {\r\n\t\t\t\talign-self:flex-end;\r\n\t\t\t};\r\n`;\r\n\r\n// template  List of goods in the basket if the Next button is pressed\r\nconst ShortShow: FC<IOrderShort> = ({ children, cangeOrderData }) => {\r\n\r\n\treturn (\r\n\t\t<StyledOrderShortContainer>{children}<StyledBtnChange>\r\n\t\t\t<BtnChange onClickCangeBtnCart={cangeOrderData} />\r\n\t\t</StyledBtnChange>\r\n\t\t</StyledOrderShortContainer>\r\n\t);\r\n};\r\n\r\nexport default ShortShow;","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport { IItemData } from '../../../redux/ItemSlice';\r\nimport { ArrowFn } from '../../../types/fnTypes';\r\nimport ShortShow from '../ShortShow';\r\nimport { ImgStyled } from './OrderItem';\r\n\r\ninterface IOrderShort {\r\n\titems: IItemData[];\r\n\tonClickImg: (id: string) => void;\r\n\tcangeOrderData: ArrowFn;\r\n};\r\n\r\n\r\nconst StyledItemsImg = styled.div`\r\n\tflex: 1 1 80%;\r\n\tdisplay: grid;\r\n\tgrid-template-columns:repeat(auto-fit, 80px);\r\n\tgap:20px;\r\n`;\r\nconst StyledImgBox = styled.button`\r\n\twidth: 80px;\r\n\theight:80px;\r\n\tborder: 1px solid ${props => props.theme.color.divider || '#EAEAF0'} ;\r\n\tborder-radius: 4px;\r\n\ttransition: border 0.3s ease 0s;\r\n\t&:hover{\r\n\t\tborder: 1px solid ${props => props.theme.color.blue || '#4878A6'};\r\n\t}\r\n`;\r\n\r\n\r\n// List of goods in the basket if the Next button is pressed\r\nconst OrderShort: FC<IOrderShort> = ({ items, onClickImg, cangeOrderData }) => {\r\n\tconst imgItmeElems: JSX.Element[] = items.map((e, i) =>\r\n\t\t<StyledImgBox key={e.itemDescription + i} onClick={() => onClickImg(e.id)}>\t<ImgStyled src={e.src ? e.src : ''} /></StyledImgBox>\r\n\t);\r\n\treturn (\r\n\t\t<ShortShow cangeOrderData={cangeOrderData}>\r\n\t\t\t{<StyledItemsImg>{imgItmeElems}</StyledItemsImg>}\r\n\t\t</ShortShow>\r\n\t);\r\n};\r\n\r\nexport default OrderShort;","import React, { FC, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { selectItemInCart } from '../../../redux/ActionSlice';\r\nimport { setOrderItems } from '../../../redux/CartSlice';\r\nimport { useAppDispatch, useAppSelector } from '../../../redux/hooks';\r\nimport { selectitemsData } from '../../../redux/ItemSlice';\r\nimport { selectCartTextOrder } from '../../../redux/LanguageSlice';\r\nimport BtnNext from '../BtnNext';\r\nimport { ISetNext } from '../Cart';\r\nimport Order from './Order';\r\nimport OrderShort from './OrderShort';\r\n\r\n\r\n\r\ninterface IOrederContainer extends ISetNext {\r\n\tsetTotalPrise: (totalPrise: string) => void;\r\n\r\n};\r\n\r\n\r\nexport const StyledCartItemTitle = styled.div`\r\n\tfont-weight: 700;\r\n\tfont-size: 20px;\r\n\tline-height: 120%;\r\n\t@media ${props => props.theme.media?.tablet || '(min-width: 767.98px)'} {\r\n\t\tfont-size: 24px;\r\n\t};\r\n\t\r\n\t@media ${props => props.theme.media?.desktop || `(min-width: 991.98px)`} {\r\n\t\tfont-size: 28px;\r\n\t};\r\n`;\r\n\r\nexport const StyledCartItemContainer = styled.div`\r\n\tpadding:30px 0;\r\n\t\r\n\tborder-bottom: 1px solid ${props => props.theme.color.divider || '#C8CACB'};\r\n\t@media ${props => props.theme.media?.tablet || '(min-width: 767.98px)'} {\r\n\t\tpadding:30px;\r\n\t\tmargin-bottom:40px;\r\n\t\tborder: 1px solid ${props => props.theme.color.divider || '#C8CACB'};\r\n\t\tborder-radius: 8px;\r\n\t};\r\n`;\r\n//  component of the ordered goods in the basket\r\nconst OrderContainer: FC<IOrederContainer> = ({ setTotalPrise, setIsNext, isNext }) => {\r\n\tconst dispatch = useAppDispatch();\r\n\t// The text of the section order\r\n\tconst titleText = useAppSelector(selectCartTextOrder);\r\n\t// array ID of goods in the basket\r\n\tconst orderItem = useAppSelector(selectItemInCart);\r\n\r\n\t// Choosing goods that are in the order\r\n\tconst items = useAppSelector(selectitemsData).filter((e) => orderItem.includes(e.id));\r\n\r\n\t// The final price of all selected goods\r\n\tconst totalPrise = items.reduce((prev, e) => {\r\n\t\tconst dicsountPrise: number = +(+e.prise - (+e.prise * e.discount / 100)).toFixed(2);\r\n\t\tconst itemCount: number = orderItem.filter((el) => el === e.id).length;\r\n\t\treturn prev + Number((dicsountPrise * itemCount).toFixed(2));\r\n\t}, 0);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\t// We transfer the amount of all goods to the local Store\r\n\t\tsetTotalPrise(totalPrise.toFixed(2));\r\n\t}, [totalPrise]);\r\n\r\n\r\n\r\n\t// Action when pressing the picture or describing the goods\r\n\tconst onClickItem = (id: string) => {\r\n\t\tconsole.log(id);\r\n\t};\r\n\r\n\tconst onNextClick = () => {\r\n\t\tsetIsNext(true);\r\n\t\tdispatch(setOrderItems(orderItem));\r\n\t\tconsole.log('+');\r\n\r\n\t}\r\n\r\n\r\n\treturn (<>\r\n\t\t<StyledCartItemContainer>\r\n\t\t\t<StyledCartItemTitle>{titleText?.title}</StyledCartItemTitle>\r\n\t\t\t{isNext ? <OrderShort items={items} onClickImg={onClickItem} cangeOrderData={() => setIsNext(false)} /> :\r\n\t\t\t\t<Order items={items} orderItem={orderItem} onClickItem={onClickItem} />}\r\n\t\t</StyledCartItemContainer>\r\n\t\t{isNext ? null : <BtnNext onClickNextBtnCart={onNextClick} />}\r\n\t</>\r\n\t);\r\n};\r\n\r\nexport default React.memo(OrderContainer);","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport { StyledCartItemContainer } from './Order/OrderContainer';\r\n\r\ninterface ICartMetodNotActivProps {\r\n\ttitle: string;\r\n};\r\nexport const StyledTextTitleNotActive = styled.div`\r\n\tfont-weight: 700;\r\n\tfont-size: 24px;\r\n\tline-height: 120%;\r\n\tcolor:${props => props.theme.color.text.second || '#838688'};\r\n`;\r\n\r\n// Inactive basket menu items\r\nconst CartMetodNotActiv: FC<ICartMetodNotActivProps> = ({ title }) => {\r\n\treturn (\r\n\t\t<StyledCartItemContainer>\r\n\t\t\t<StyledTextTitleNotActive>{title}</StyledTextTitleNotActive>\r\n\t\t</StyledCartItemContainer >\r\n\t);\r\n};\r\n\r\nexport default React.memo(CartMetodNotActiv);","import React, { FC, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { selectItemInCart } from '../../../redux/ActionSlice';\r\nimport { useAppSelector } from '../../../redux/hooks';\r\nimport { ArrowFn } from '../../../types/fnTypes';\r\nimport Button from '../../Button';\r\nimport RememberMe from '../../Login/LoginForm/RememeberMe/RememberMe';\r\nimport { StyledCartItemTitle } from '../Order/OrderContainer';\r\nimport { selectCartTextTotal } from './../../../redux/LanguageSlice';\r\n\r\ninterface ICartTotalContainer {\r\n\ttotalPrise: string;\r\n\tdeliveryPrise?: number;\r\n\tisCheckout: boolean;\r\n\tonCheckout: ArrowFn;\r\n\tgoToUserAagreement: ArrowFn;\r\n};\r\n\r\nconst StyledCartTotelBox = styled.div`\r\n\tbackground-color:${props => props.theme.color.lightBlue || '#EDF2F6'};\r\n\tborder-radius: 8px;\r\n\tmargin: 20px -20px 20px;\r\n\tpadding:  20px;\r\n\tdisplay: flex;\r\n\tflex-direction:column;\r\n\t@media ${props => props.theme.media?.tablet || '(min-width: 767.98px)'} {\r\n\t\tmargin: 0;\r\n\t\tpadding:  30px;\r\n\t};\r\n`;\r\n\r\nconst StyledTotalTitle = styled.div`\r\n\tmargin-bottom:20px;\r\n`;\r\n\r\nconst StyledTotalPrise = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content:space-between;\r\n\talign-items:center;\r\n\tmargin-bottom:20px;\r\n`;\r\nconst StyledText = styled.div`\r\n\r\n\tfont-size: 20px;\r\n\tcolor:${props => props.theme.color.text.second || '#838688'};\r\n`;\r\nconst StyledTotal = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content:space-between;\r\n\r\n\tpadding-bottom:20px;\r\n\tpadding-top:20px;\r\n\tborder-top: 1px solid ${props => props.theme.color.divider || '#C8CACB'};\r\n\t@media ${props => props.theme.media?.tablet || '(min-width: 767.98px)'} {\r\n\t\tpadding-top:30px;\r\n\t};\r\n`;\r\n\r\nconst StyledTotalText = styled.div`\r\n\tfont-size: 20px;\r\n\tfont-weight: 600;\r\n\r\n\t@media ${props => props.theme.media?.tablet || '(min-width: 767.98px)'} {\r\n\t\tfont-size: 24px;\r\n\t};\r\n`;\r\nconst StyledPrise = styled.div`\r\n\tfont-weight: 700;\r\n\tfont-size: 24px;\r\n\tline-height: 130%;\r\n\t@media ${props => props.theme.media?.tablet || '(min-width: 767.98px)'} {\r\n\t\tfont-size: 36px;\r\n\t};\r\n`;\r\n\r\nconst StyledAcceptUserAagreement = styled.div`\r\n\tdisplay: flex;\r\n\r\n\tflex-wrap:wrap;\r\n\tpadding:20px 0 0  0;\r\n\tfont-size:14px;\r\n\t@media ${props => props.theme.media?.tablet || '(min-width: 767.98px)'} {\r\n\t\tfont-size: 16px;\r\n\t\tpadding:20px 20px 0;\r\n\t};\r\n`;\r\n\r\nconst StyledCheckboxBlock = styled.div`\r\n\tdisplay: flex;\r\n\talign-items:center;\r\n`;\r\nconst StyledCheckboxLabel = styled.label`\r\n\twidth:24px;\r\n\theight:24px;\r\n\tmargin-right:10px;\r\n`;\r\n\r\nconst StyledAToUserAagreementBnt = styled.button`\r\n\ttext-align:start;\r\n\tpadding-left:1em;\r\n\tcolor:${props => props.theme.color.blue || '#4878A6'};\r\n\ttransition: color 0.3s ease 0s;\r\n\t&:hover{\r\n\t\tcolor:${props => props.theme.color.darkBlue || '#4878A6'};\r\n\t}\r\n\t`;\r\n\r\n\r\n\r\n\r\nconst CartTotalContainer: FC<ICartTotalContainer> = ({ totalPrise, deliveryPrise = 0,\r\n\tisCheckout, onCheckout, goToUserAagreement }) => {\r\n\t// Text for total\r\n\tconst cartTotalText = useAppSelector(selectCartTextTotal);\r\n\t//The number of goods in the basket\r\n\tconst countItwm = useAppSelector(selectItemInCart).length;\r\n\t// total amount per case( including delivery)\r\n\tconst prise: string = (+totalPrise + deliveryPrise).toFixed(2) + '€';\r\n\t// STATE checkbox clicks\r\n\tconst [isChecked, setIsChecked] = useState(false)\r\n\t// invert the state\r\n\tconst handleChange = () => { setIsChecked(!isChecked); }\r\n\r\n\r\n\treturn (<>\r\n\r\n\t\t<StyledCartTotelBox>\r\n\t\t\t<StyledTotalTitle>\r\n\t\t\t\t<StyledCartItemTitle>{cartTotalText?.title}</StyledCartItemTitle>\r\n\t\t\t</StyledTotalTitle>\r\n\t\t\t<StyledTotalPrise>\r\n\t\t\t\t<StyledText>{countItwm} {cartTotalText?.goodForAmmount}</StyledText>\r\n\t\t\t\t<div>{totalPrise}€</div>\r\n\t\t\t</StyledTotalPrise>\r\n\t\t\t<StyledTotalPrise>\r\n\t\t\t\t<StyledText>{cartTotalText?.costOfDelivery}</StyledText>\r\n\t\t\t\t<div>{!deliveryPrise ? cartTotalText?.free : `${deliveryPrise.toFixed(2)}€`}</div>\r\n\t\t\t</StyledTotalPrise>\r\n\t\t\t<StyledTotal>\r\n\t\t\t\t<StyledTotalText>{cartTotalText?.toPay}</StyledTotalText>\r\n\t\t\t\t<StyledPrise>{prise}</StyledPrise>\r\n\t\t\t</StyledTotal>\r\n\t\t\t<Button disabled={!isChecked && isCheckout} width='100%' onClick={onCheckout}>{cartTotalText?.checkout}</Button>\r\n\t\t</StyledCartTotelBox>\r\n\r\n\t\t<StyledAcceptUserAagreement>\r\n\t\t\t<StyledCheckboxBlock>\r\n\t\t\t\t<StyledCheckboxLabel onChange={handleChange}>\r\n\t\t\t\t\t<input hidden type='checkbox' />\r\n\t\t\t\t\t<RememberMe value={isChecked} />\r\n\t\t\t\t</StyledCheckboxLabel>\r\n\t\t\t\t{cartTotalText?.byConfirming[0]}\r\n\t\t\t</StyledCheckboxBlock>\r\n\t\t\t<StyledAToUserAagreementBnt onClick={goToUserAagreement}>\r\n\r\n\t\t\t\t{cartTotalText?.byConfirming[1]}\r\n\t\t\t</StyledAToUserAagreementBnt>\r\n\t\t</StyledAcceptUserAagreement>\r\n\t</>\r\n\t);\r\n};\r\n\r\nexport default React.memo(CartTotalContainer);","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nexport interface ICartDateBox {\r\n\tbdColor?: string;\r\n\theigthBox?: string;\r\n\tisOnlyBdColor?: boolean;\r\n};\r\n\r\nconst StyledDateCartBox = styled.div<ICartDateBox>`\r\n\twidth: 100%;\r\n\theight:${props => props.heigthBox};\r\n\tborder: 2px solid ${props => props.bdColor || props.theme.color.cardBorder || '#EAEAF0'};\r\n\tcolor:${props => props.isOnlyBdColor ? props.theme.color.text.main : props.bdColor || props.theme.color.text.second || '#838688'};\r\n\tborder-radius: 5px;\r\n\tdisplay: flex;\r\n\talign-items:center;\r\n\tpadding:0 10px 0 ${props => props.isOnlyBdColor ? '0' : '20px'};\r\n\ttransition: all 0.3s ease 0s;\r\n\t@media ${props => props.theme.media?.tablet || '(min-width: 767.98px)'} {\r\n\t\theight:48px;\r\n\t};\r\n\r\n`;\r\n\r\n// stylized boxing boxes in the basket\r\nconst CartDateBox: FC<ICartDateBox> = ({ bdColor = '', heigthBox = '48px', isOnlyBdColor = false, children }) => {\r\n\r\n\r\n\treturn (\r\n\t\t<StyledDateCartBox bdColor={bdColor} heigthBox={heigthBox} isOnlyBdColor={isOnlyBdColor}>\r\n\t\t\t{children}\r\n\t\t</StyledDateCartBox>\r\n\t);\r\n};\r\n\r\nexport default CartDateBox;","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface IRadioProps {\r\n\tisChecked: boolean;\r\n};\r\n\r\n\r\n\r\nconst StyledRadioDot = styled.div<IRadioProps>`\r\n\theight:20px;\r\n\twidth:20px;\r\n\tborder-radius:50%;\r\n\tborder: 2px solid  ${props => props.isChecked ?\r\n\t\tprops.theme.color.blue || '#4878A6' :\r\n\t\tprops.theme.color.cardBorder || '#EAEAF0'};\r\n\tposition: relative;\r\n\ttransition: border 0.3s ease 0s;\r\n\t&::before{\r\n\t\tcontent:'';\r\n\t\tposition:absolute;\r\n\t\tdisplay: ${props => props.isChecked ? 'block' : 'none'};\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform:translate(-50%, -50%);\r\n\t\theight:12px;\r\n\t\twidth:12px;\r\n\t\tborder-radius:50%;\r\n\t\tbackground-color: ${props => props.theme.color.blue || '#4878A6'};\r\n\t\tz-index: 5;\r\n\t};\r\n`;\r\nconst StyledLabels = styled.div`\r\n\tdisplay: flex;\r\n\r\n`;\r\nconst StyledTextLebel = styled.div`\r\n\tmargin-left:10px;\r\n\tcursor: pointer;\r\n`;\r\n\r\n// A stylized radio\r\nconst RadioLabel: FC<IRadioProps> = ({ isChecked, children }) => {\r\n\treturn (\r\n\t\t<StyledLabels>\r\n\t\t\t<StyledRadioDot isChecked={isChecked} />\r\n\t\t\t<StyledTextLebel>{children}</StyledTextLebel>\r\n\t\t</StyledLabels>\r\n\t);\r\n};\r\nexport default RadioLabel;","import { useField } from 'formik';\r\nimport React from 'react';\r\n\r\nimport CartDateBox, { ICartDateBox } from '../CartDateBox';\r\nimport { InputAttrProps } from './CartDeliveryForm';\r\nimport RadioLabel from './RadioLabel';\r\n\r\n\r\n\r\n// field for choosing a delivery method - radio\r\nconst CartFormRadio = ({ children, bdColor, isOnlyBdColor, heigthBox, ...props }: ICartDateBox & InputAttrProps) => {\r\n\tconst [field] = useField({ ...props, type: 'radio', });\r\n\r\n\treturn (\r\n\t\t<label>\r\n\t\t\t<CartDateBox bdColor={bdColor ? bdColor : field.checked ? '#4878A6' : ''}\r\n\t\t\t\tisOnlyBdColor={isOnlyBdColor} heigthBox={heigthBox}>\r\n\t\t\t\t<input hidden type=\"radio\" {...field} {...props} />\r\n\t\t\t\t<RadioLabel isChecked={field.checked!} >{children}</RadioLabel>\r\n\t\t\t</CartDateBox>\r\n\t\t</label >\r\n\r\n\t);\r\n};\r\n\r\nexport default React.memo(CartFormRadio);","\r\nimport { useField } from 'formik';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useAppSelector } from '../../../../redux/hooks';\r\nimport { selectDateMonDayText } from '../../../../redux/LanguageSlice';\r\nimport CartDateBox from '../../CartDateBox';\r\nimport { InputAttrProps } from '../CartDeliveryForm';\r\nimport { StyledTitleDateBox } from '../SelectCity/SelectCityContainer';\r\n\r\ninterface IDeliveryDateBoxContainer {\r\n\tdateMinMax: string[];\r\n\ttitle: string;\r\n};\r\n\r\n\r\nexport const StyledInputBox = styled.div`\r\n\tposition: relative;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n`;\r\nconst StyledInputDateInput = styled.input`\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\t opacity:0; \r\n\t&::-webkit-calendar-picker-indicator{\r\n\t\tbackground-color:red;\r\n\t\twidth: 100%;\r\n\t\tcursor: pointer;\r\n\t}\r\n`;\r\nexport const StyledInputDateMask = styled.div`\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: flex;\r\n\talign-items:center;\r\n\tcolor: ${props => props.theme.color.text.main};\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: calc(100% - 0.25em) 50%;\r\n\tbackground-size: 0.85em auto;\r\n\tbackground-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 80 80'%3E%3Cpath d='M70.3 13.8L40 66.3 9.7 13.8z' fill='%23000'%3E%3C/path%3E%3C/svg%3E\");\r\n\tpointer-events: none;\r\n\tz-index:10;\r\n`;\r\n//Delivery Day component\r\nconst DeliveryDateBoxContainer = ({ title, dateMinMax, ...props }: IDeliveryDateBoxContainer & InputAttrProps) => {\r\n\tconst [field, meta] = useField({ ...props, type: 'date', });\r\n\tconst dateText = useAppSelector(selectDateMonDayText)!;\r\n\t//formates the date for the output\r\n\tconst fieldDate = new Date(field.value);\r\n\tconst dayofDifferent: number = fieldDate.getDate() - new Date().getDate();\r\n\tconst dayW: string = (dayofDifferent + 1 <= dateText.futureDays.length) ?\r\n\t\tdateText.futureDays[dayofDifferent] + ', ' : '';\r\n\tconst dateElem: string = `${dayW}${fieldDate.getDate()} ${dateText.month[fieldDate.getMonth()]},\r\n\t ${dateText.day[fieldDate.getDay()]}`;\r\n\r\n\tsessionStorage.setItem(field.name, field.value);\r\n\r\n\treturn (<div>\r\n\t\t<StyledTitleDateBox>{title}</StyledTitleDateBox>\r\n\t\t<CartDateBox bdColor={meta.error && meta.touched ? '#F15152' : ''}>\r\n\t\t\t<StyledInputBox>\r\n\t\t\t\t<StyledInputDateInput type=\"date\" {...field} {...props} min={dateMinMax[0]} max={dateMinMax[1]} />\r\n\t\t\t\t<StyledInputDateMask  >{dateElem}</StyledInputDateMask>\r\n\t\t\t</StyledInputBox>\r\n\t\t</CartDateBox>\r\n\t</div>\r\n\t);\r\n};\r\n\r\nexport default React.memo(DeliveryDateBoxContainer);","import { ErrorMessage, useField } from 'formik';\r\nimport React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { validateSelectIsEnpty } from '../../../../utilits/validators';\r\nimport { IUseStateCartDeliveryForm } from '../../Cart';\r\nimport CartDateBox from '../../CartDateBox';\r\nimport { SelectAttrProps } from '../CartDeliveryForm';\r\nimport { StyledInputBox, StyledInputDateMask } from '../DeliveryDateBox/DeliveryDateBoxContainer';\r\n\r\ninterface ICartFormRadio {\r\n\tcityName?: string;\r\n};\r\n\r\n\r\ninterface ISelectCityContainer extends IUseStateCartDeliveryForm, ICartFormRadio {\r\n\toption?: string[];\r\n\ttitle: string;\r\n\tplacholderText?: string;\r\n\toptionPlus?: [string, number][];\r\n\tpriseDelivery?: string;\r\n};\r\nexport const StyledCitySelect = styled.select`\r\n\topacity:0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n`;\r\nexport const StyledTitleDateBox = styled.div`\r\n\tmargin-bottom:8px;\r\n`;\r\nconst StyledErrorMessage = styled.div`\r\n\tfont-size:12px;\r\n\tfont-weight:700;\r\n\tcolor:${props => props.theme.color.red || '#F15152'};\r\n\tz-index:30;\r\n\t\r\n`;\r\nconst StyledPriseText = styled.span`\r\n\tcolor:${props => props.theme.color.text.second || '#838688'};\r\n`;\r\n\r\n// component of the type of Select to the form of a dozen\r\nconst SelectCityContainer = ({ option, title, placholderText, optionPlus,\r\n\tpriseDelivery, setDeliveryPreise, cityName,\r\n\t...props }: ISelectCityContainer & SelectAttrProps) => {\r\n\r\n\tconst [field, meta] = useField({ ...props, validate: props.validate || validateSelectIsEnpty });\r\n\r\n\r\n\t//set the delivery price format\r\n\tconst getPriseFormat = (prise: number, text: string = 'free'): string =>\r\n\t\tprise ? ` (${prise.toFixed(2) + '€'})` : ` (${text})`;\r\n\r\n\t// List output for the list Select\r\n\tconst getOptionElemrnt = (option?: string[], optionPlus?: [string, number][]): JSX.Element[] | null => {\r\n\t\tif (!option && !optionPlus) return null;\r\n\t\tif (optionPlus) return optionPlus!.map((e, i) =>\r\n\t\t\t<option value={e[0]} key={e[0] + i}>{e[0]}{getPriseFormat(e[1], priseDelivery)}</option>);\r\n\t\treturn option!.sort().map((e, i) => <option value={e} key={e + i}>{e}</option>)\r\n\t};\r\n\r\n\t// We form a text for show \r\n\tconst valueText: string = field.value;\r\n\tconst arr: [string, number] | null = optionPlus ? optionPlus!.filter(e => e[0] === valueText)[0] : null;\r\n\tconst inputDate: JSX.Element = arr ?\r\n\t\t<span>{valueText}<StyledPriseText> {`${getPriseFormat(arr[1], priseDelivery)}`}</StyledPriseText></span>\r\n\t\t: <span>{valueText || placholderText || title}</span>;\r\n\r\n\tsessionStorage.setItem(field.name, valueText);\r\n\r\n\t// We set the delivery price\r\n\tuseEffect(() => { arr && setDeliveryPreise !== undefined && setDeliveryPreise(arr[1]) }, [arr]);\r\n\r\n\r\n\treturn (<div>\r\n\t\t<StyledTitleDateBox>{title}</StyledTitleDateBox>\r\n\t\t<CartDateBox bdColor={meta.error && meta.touched ? '#F15152' : ''}>\r\n\t\t\t<StyledInputBox>\r\n\t\t\t\t<StyledCitySelect  {...field} {...props}>\r\n\t\t\t\t\t<option value=''>{placholderText || title}</option>\r\n\t\t\t\t\t{getOptionElemrnt(option, optionPlus)}\r\n\t\t\t\t</StyledCitySelect>\r\n\t\t\t\t<StyledInputDateMask>{inputDate}</StyledInputDateMask>\r\n\t\t\t</StyledInputBox>\r\n\t\t</CartDateBox>\r\n\t\t<StyledErrorMessage>\t<ErrorMessage name={field.name} /></StyledErrorMessage>\r\n\t</div>\r\n\r\n\t);\r\n};\r\n\r\nexport default React.memo(SelectCityContainer);","export const cityArr = {\r\n\t\"city\": [\"Berlin\",\r\n\t\t\"Hamburg\",\r\n\t\t\"München\",\r\n\t\t\"Köln\",\r\n\t\t\"Frankfurt am Main\",\r\n\t\t\"Stuttgart\",\r\n\t\t\"Düsseldorf\",\r\n\t\t\"Dortmund\",\r\n\t\t\"Essen\",\r\n\t\t\"Leipzig\",\r\n\t\t\"Bremen\",\r\n\t\t\"Dresden\",\r\n\t\t\"Hannover\",\r\n\t\t\"Nürnberg\",\r\n\t\t\"Duisburg\",\r\n\t\t\"Bochum\",\r\n\t\t\"Wuppertal\",\r\n\t\t\"Bielefeld\",\r\n\t\t\"Bonn\",\r\n\t\t\"Münster\",\r\n\t\t\"Karlsruhe\",\r\n\t\t\"Mannheim\",\r\n\t\t\"Augsburg\",\r\n\t\t\"Wiesbaden\",\r\n\t\t\"Gelsenkirchen\",\r\n\t\t\"Mönchengladbach\",\r\n\t\t\"Braunschweig\",\r\n\t\t\"Chemnitz\",\r\n\t\t\"Kiel\",\r\n\t\t\"Aachen\",\r\n\t\t\"Halle\",\r\n\t\t\"Magdeburg\",\r\n\t\t\"Freiburg im Breisgau\",\r\n\t\t\"Krefeld\",\r\n\t\t\"Lübeck\",\r\n\t\t\"Oberhausen\",\r\n\t\t\"Erfurt\",\r\n\t\t\"Mainz\",\r\n\t\t\"Rostock\",\r\n\t\t\"Kassel\",\r\n\t\t\"Hagen\",\r\n\t\t\"Hamm\",\r\n\t\t\"Saarbrücken\",\r\n\t\t\"Mülheim an der Ruhr\",\r\n\t\t\"Potsdam\",\r\n\t\t\"Ludwigshafen am Rhein\",\r\n\t\t\"Oldenburg\",\r\n\t\t\"Leverkusen\",\r\n\t\t\"Osnabrück\",\r\n\t\t\"Solingen\",\r\n\t\t\"Heidelberg\",\r\n\t\t\"Herne\",\r\n\t\t\"Neuss\",\r\n\t\t\"Darmstadt\",\r\n\t\t\"Paderborn\",\r\n\t\t\"Regensburg\",\r\n\t\t\"Ingolstadt\",\r\n\t\t\"Würzburg\",\r\n\t\t\"Fürth\",\r\n\t\t\"Wolfsburg\",\r\n\t\t\"Offenbach\",\r\n\t\t\"Ulm\",\r\n\t\t\"Heilbronn\",\r\n\t\t\"Pforzheim\",\r\n\t\t\"Göttingen\",\r\n\t\t\"Bottrop\",\r\n\t\t\"Trier\",\r\n\t\t\"Recklinghausen\",\r\n\t\t\"Reutlingen\",\r\n\t\t\"Bremerhaven\",\r\n\t\t\"Koblenz\",\r\n\t\t\"Bergisch Gladbach\",\r\n\t\t\"Jena\",\r\n\t\t\"Remscheid\",\r\n\t\t\"Erlangen\",\r\n\t\t\"Moers\",\r\n\t\t\"Mörs\",\r\n\t\t\"Siegen\",\r\n\t\t\"Hildesheim\",\r\n\t\t\"Salzgitter\",\r\n\t\t\"Kaiserslautern\",]\r\n};\r\n","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { validateSelectIsEnpty } from '../../../../utilits/validators';\r\nimport CartDateBox from '../../CartDateBox';\r\nimport { InputAttrProps } from '../CartDeliveryForm';\r\nimport { StyledTitleDateBox } from '../SelectCity/SelectCityContainer';\r\n\r\ninterface IFiledTextCart {\r\n\ttitle: string;\r\n\tFormType?: string;\r\n};\r\n\r\nconst StyledInput = styled.input`\r\n\twidth:100%;\r\n\theight: 100%;\r\n`;\r\nconst StyledTextArea = styled.textarea`\r\n\twidth:100%;\r\n\theight: 100%;\r\n`;\r\n\r\n\r\n// Components for text output\r\nconst FieldTextCart = ({ title, FormType = 'input', ...props }: IFiledTextCart & InputAttrProps) => {\r\n\tconst [field, meta] = useField({ ...props, validate: props.validate || validateSelectIsEnpty });\r\n\tsessionStorage.setItem(field.name, field.value);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<StyledTitleDateBox>{title}</StyledTitleDateBox>\r\n\t\t\t<CartDateBox bdColor={meta.error && meta.touched ? '#F15152' : ''}\r\n\t\t\t\theigthBox={FormType === 'input' ? '48px' : '96px'}>\r\n\t\t\t\t{FormType === 'input' ? <StyledInput  {...field} {...props} /> : <StyledTextArea  {...field} {...props} />}\r\n\t\t\t</CartDateBox>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default React.memo(FieldTextCart);","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface IShopAdress {\r\n\tcity: string;\r\n\tadress: string;\r\n\tmode: string;\r\n};\r\n\r\nconst StyledArress = styled.div`\r\n\tfont-size:20px;\r\n\tmargin-bottom:10px;\r\n`;\r\nconst StyledMode = styled.div`\r\n\tcolor:${props => props.theme.color.text.second || '#838688'};\r\n`;\r\n\r\n\r\n\r\nconst ShopAdress: FC<IShopAdress> = ({ city, adress, mode }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<StyledArress>{`${city}, ${adress}`}</StyledArress>\r\n\t\t\t<StyledMode>{mode}</StyledMode>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default React.memo(ShopAdress);","import React, { FC, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useAppSelector } from '../../../../redux/hooks';\r\nimport { selectCartDeliveryTextPickup } from '../../../../redux/LanguageSlice';\r\nimport BtnChange from '../../BtnChange';\r\nimport CartFormRadio from '../CartFormRadio';\r\nimport { StyledTitleDateBox } from '../SelectCity/SelectCityContainer';\r\nimport ShopAdress from './ShopAdress';\r\n\r\ninterface IPickupContainer {\r\n\tcity: string;\r\n\tgetCityArrWithShops: () => string[];\r\n};\r\n\r\nconst StyledRadioBox = styled.ul`\r\n\tdisplay: grid;\r\n\tgrid-template-rows: minmax(auto, 65px);\r\n\trow-gap:20px;\r\n\tmargin-top:30px;\r\n\t@media ${props => props.theme.media?.tablet || '(min-width: 767.98px)'} {\r\n\t\toverflow-y:auto;\r\n\t\theight:455px;\t\r\n\t};\r\n\t@media ${props => props.theme.media?.desktop || `(min-width: 991.98px)`} {\r\n\t\theight:325px;\t\r\n\t}\r\n`;\r\nconst StyledRadioBoxForMobil = styled.div`\r\n\t@media ${props => props.theme.media?.tablet || '(min-width: 767.98px)'} {\r\n\t\tdisplay: none;\r\n\t};\r\n\r\n`;\r\nconst StyledRadioBoxForNabletAndDesktop = styled.div`\r\n\tdisplay: none;\r\n\t@media ${props => props.theme.media?.tablet || '(min-width: 767.98px)'} {\r\n\t\tdisplay: block;\r\n\t};\r\n\r\n`;\r\n\r\n\r\nconst PickupContainer: FC<IPickupContainer> = ({ city, getCityArrWithShops }) => {\r\n\r\n\tconst pickupText = useAppSelector(selectCartDeliveryTextPickup)!;\r\n\t// The number of shown elements of stores of stores\r\n\tconst [elemAmount, setElemAmount] = useState(10);\r\n\t// show the button or not\r\n\tconst [isBtnShow, setIsBtnShow] = useState(true);\r\n\t// List of stores in the selected city\r\n\tconst shopInCityList = pickupText.shope.filter(e => city && getCityArrWithShops().includes(city) ? e.city === city : e);\r\n\t// We get JSX to display the store list\r\n\tconst getRadioElemFromArr = (arr: {\r\n\t\tcity: string;\r\n\t\tadress: string;\r\n\t\tmode: string;\r\n\t\tidShop: string;\r\n\t}[]) => arr.map((e, i) =>\r\n\t\t<li key={e.city + e.adress + i}>\r\n\t\t\t<CartFormRadio name={'shopAdress'} value={e.idShop}\r\n\t\t\t\tbdColor='transparent' isOnlyBdColor={true} heigthBox='auto'>\r\n\t\t\t\t<ShopAdress city={e.city} adress={e.adress} mode={e.mode} />\r\n\t\t\t</CartFormRadio>\r\n\t\t</li>\r\n\t);\r\n\t// get a new array of the required number of elements\r\n\tconst getCutArr = <T,>(arr: T[], amount: number) =>\r\n\t\tamount <= 0 || arr.length === 0 || arr.length < amount ? arr : arr.slice(0, amount);\r\n\t//show 10 more elements\r\n\tconst showNext10 = () => {\r\n\t\tif (pickupText.shope.length - elemAmount <= 10) {\r\n\t\t\tsetElemAmount(pickupText.shope.length);\r\n\t\t\tsetIsBtnShow(false);\r\n\t\t} else {\r\n\t\t\tsetElemAmount(elemAmount + 10);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<StyledTitleDateBox>\r\n\t\t\t\t{`${pickupText.productIsAvailable[0]} ${pickupText.shope.length} ${pickupText.productIsAvailable[1]}`}\r\n\t\t\t</StyledTitleDateBox>\r\n\t\t\t<StyledRadioBoxForNabletAndDesktop>\r\n\t\t\t\t<StyledRadioBox>{getRadioElemFromArr(shopInCityList)}</StyledRadioBox>\r\n\t\t\t</StyledRadioBoxForNabletAndDesktop>\r\n\r\n\t\t\t<StyledRadioBoxForMobil>\r\n\t\t\t\t<StyledRadioBox>{getRadioElemFromArr(getCutArr(shopInCityList, elemAmount))}</StyledRadioBox>\r\n\t\t\t\t{isBtnShow && shopInCityList.length > 10 ? <BtnChange onClickCangeBtnCart={showNext10} isBottomBd={false} textBtn={`${pickupText.btnNext} 10`} /> : null}\r\n\t\t\t</StyledRadioBoxForMobil>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default React.memo(PickupContainer);","import React, { FC } from 'react';\r\nimport { FieldHookConfig, Form, Formik, FormikProps } from 'formik';\r\n\r\nimport CartFormRadio from './CartFormRadio';\r\nimport { useAppSelector } from '../../../redux/hooks';\r\nimport { selectCartDeliveryTextCity, selectCartDeliveryTextDelivery, selectCartDeliveryTextPickup } from './../../../redux/LanguageSlice';\r\nimport styled from 'styled-components';\r\nimport SelectCityContainer, { StyledTitleDateBox } from './SelectCity/SelectCityContainer';\r\n\r\nimport { cityArr } from './../../../localization/uu';\r\nimport DeliveryDateBoxContainer from './DeliveryDateBox/DeliveryDateBoxContainer';\r\nimport { getDateIsMoreTodayForString } from '../../../utilits/functions';\r\nimport { IUseStateCartDeliveryForm } from '../Cart';\r\nimport FieldTextCart from './InputText.tsx/InputTextCart';\r\nimport PickupContainer from './PickupContainer/PickupContainer';\r\nimport { ISetIsNext } from './../Cart';\r\nimport { useAppDispatch } from './../../../redux/hooks';\r\nimport { setDeliveryDate, } from '../../../redux/CartSlice';\r\nimport { validateSelectIsEnpty } from './../../../utilits/validators';\r\n\r\n\r\nexport interface IDeliveryFormDate {\r\n\tcity: string;\r\n\tdelivery: string;\r\n\tdeliveryDate: string;\r\n\tdeliveryTime: string;\r\n\tdeliveryStreet: string;\r\n\tdeliveryFlat: string;\r\n\tcomment: string;\r\n\tshopAdress: string;\r\n};\r\n\r\nexport type InputAttrProps = FieldHookConfig<string> & React.InputHTMLAttributes<HTMLInputElement> & React.ClassAttributes<HTMLInputElement>;\r\nexport type SelectAttrProps = FieldHookConfig<string> & React.SelectHTMLAttributes<HTMLSelectElement> & React.ClassAttributes<HTMLSelectElement>;\r\n\r\nconst StyledDeliveryForm = styled(Form)`\r\n\tmargin-top:30px;\r\n`;\r\n\r\nconst StyledRadioGruppeAndSelectCity = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-row-gap:10px;\r\n\tborder-bottom: 1px solid ${props => props.theme.color.divider || '#C8CACB'};\r\n\tpadding-bottom:10px;\r\n\tmargin-bottom:30px;\r\n\t@media ${props => props.theme.media?.tablet || '(min-width: 767.98px)'} {\r\n\t\tpadding-bottom:30px;\r\n\t\tgrid-template-columns:repeat(2,1fr);\r\n\t\tgrid-column-gap :10px;\r\n\t};\r\n\t@media ${props => props.theme.media?.desktop || `(min-width: 991.98px)`} {\r\n\t\tgrid-row-gap:20px;\r\n\t\tgrid-column-gap :30px;\r\n\t};\r\n`;\r\nconst StyledRadioGruppe = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-row-gap:10px;\r\n\r\n@media ${props => props.theme.media?.desktop || `(min-width: 991.98px)`} {\r\n\tgrid-row-gap:20px;\r\n\t};\r\n`;\r\nconst StyledTitelDelivery = styled.span`\r\n\tcolor:transparent;\r\n`;\r\nconst StyledDeliveryGroup = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-gap:20px;\r\n\t@media ${props => props.theme.media?.tablet || '(min-width: 767.98px)'} {\r\n\t\tgrid-template-columns:repeat(2,1fr);\r\n\t\t\r\n\t};\r\n`;\r\nconst StyledCommentBox = styled.div`\r\n\t@media ${props => props.theme.media?.tablet || '(min-width: 767.98px)'} {\r\n\t\tgrid-column:1/3;\r\n\t\t\r\n\t};\r\n\t\r\n`;\r\n\r\n// Form for delivery of goods\r\nconst CartDeliveryForm: FC<IUseStateCartDeliveryForm & ISetIsNext> = ({ setDeliveryPreise, setIsNext }) => {\r\n\r\n\tconst dispatch = useAppDispatch();\r\n\tconst deliveyText = useAppSelector(selectCartDeliveryTextDelivery)!;\r\n\tconst pickupText = useAppSelector(selectCartDeliveryTextPickup)!;\r\n\tconst yourCityName = useAppSelector(selectCartDeliveryTextCity)!;\r\n\r\n\tconst initialValues: IDeliveryFormDate = {\r\n\t\tcity: sessionStorage.getItem('city') || '',\r\n\t\tdelivery: sessionStorage.getItem('delivery') || 'delivery',\r\n\t\tdeliveryDate: new Date(sessionStorage.getItem('deliveryDate')!) < new Date(getDateIsMoreTodayForString()) ? getDateIsMoreTodayForString()! : sessionStorage.getItem('deliveryDate')!,\r\n\t\tdeliveryTime: sessionStorage.getItem('deliveryTime') || '',\r\n\t\tdeliveryStreet: sessionStorage.getItem('deliveryStreet') || '',\r\n\t\tdeliveryFlat: sessionStorage.getItem('deliveryFlat') || '',\r\n\t\tcomment: sessionStorage.getItem('comment') || '',\r\n\t\tshopAdress: sessionStorage.getItem('shopAdress') || pickupText.shope[0].idShop,\r\n\t};\r\n\t// List of cities\r\n\tconst cityNames: string[] = cityArr.city;\r\n\t// List of delivery intervals and delivery costs\r\n\tconst timeInterval: [string, number][] = [['09:00–12:00', 0], ['12:00–15:00', 0], ['15:00–18:00', 0], ['18:00–21:00', 10], ['21:00–24:00', 15],];\r\n\r\n\t//List of cities where there are shops\r\n\tconst getCityArrWithShops: () => string[] = () => {\r\n\t\tconst setCity: Set<string> = new Set();\r\n\t\tpickupText.shope.forEach(e => setCity.add(e.city));\r\n\t\treturn Array.from(setCity);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik initialValues={initialValues}\r\n\t\t\tonSubmit={(values, actions) => {\r\n\t\t\t\tactions.validateForm(values);\r\n\t\t\t\t// сохраняем данные в зависимости от способа доставки\r\n\t\t\t\tvalues.delivery === 'delivery' && dispatch(setDeliveryDate({ ...values, shopAdress: '', }));\r\n\t\t\t\tvalues.delivery === 'pickup' && dispatch(setDeliveryDate({\r\n\t\t\t\t\t...values,\r\n\t\t\t\t\tdeliveryDate: '',\r\n\t\t\t\t\tdeliveryTime: '',\r\n\t\t\t\t\tdeliveryStreet: '',\r\n\t\t\t\t\tdeliveryFlat: '',\r\n\t\t\t\t\tcomment: '',\r\n\t\t\t\t\tcity: '',\r\n\r\n\t\t\t\t}));\r\n\t\t\t\tsetIsNext(true);\r\n\t\t\t}}>\r\n\t\t\t{(props: FormikProps<IDeliveryFormDate>) => {\r\n\t\t\t\tsessionStorage.setItem('delivery', props.values.delivery);\r\n\t\t\t\tsessionStorage.setItem('shopAdress', props.values.shopAdress);\r\n\t\t\t\t// The city in which a pickup store is chosen\r\n\t\t\t\tconst cityNameFromShopAdress: string = props.values.shopAdress ?\r\n\t\t\t\t\tpickupText.shope.filter(e => e.idShop === props.values.shopAdress)[0].city : '';\r\n\r\n\r\n\t\t\t\treturn (<StyledDeliveryForm id='DeliveryForm'>\r\n\t\t\t\t\t<StyledRadioGruppeAndSelectCity>\r\n\r\n\t\t\t\t\t\t<SelectCityContainer name={'city'} title={yourCityName!} cityName={cityNameFromShopAdress}\r\n\t\t\t\t\t\t\toption={props.values.delivery === 'delivery' ? cityNames : getCityArrWithShops()}\r\n\t\t\t\t\t\t\tvalidate={props.values.delivery === 'delivery' ? validateSelectIsEnpty : () => { }} />\r\n\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<StyledTitleDateBox><StyledTitelDelivery>Delivery</StyledTitelDelivery></StyledTitleDateBox>\r\n\t\t\t\t\t\t\t<StyledRadioGruppe>\r\n\t\t\t\t\t\t\t\t<CartFormRadio name={'delivery'} value='delivery'>{deliveyText?.method!}</CartFormRadio>\r\n\t\t\t\t\t\t\t\t<CartFormRadio name={'delivery'} value='pickup' >{pickupText?.method!}</CartFormRadio>\r\n\t\t\t\t\t\t\t</StyledRadioGruppe>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</StyledRadioGruppeAndSelectCity>\r\n\r\n\t\t\t\t\t{props.values.delivery === 'delivery' ?\r\n\t\t\t\t\t\t<StyledDeliveryGroup>\r\n\t\t\t\t\t\t\t<DeliveryDateBoxContainer name={'deliveryDate'}\r\n\t\t\t\t\t\t\t\tdateMinMax={[getDateIsMoreTodayForString(), getDateIsMoreTodayForString(7)]}\r\n\t\t\t\t\t\t\t\ttitle={deliveyText?.date} />\r\n\t\t\t\t\t\t\t<SelectCityContainer name={'deliveryTime'} optionPlus={timeInterval}\r\n\t\t\t\t\t\t\t\tplacholderText={deliveyText.timePlasholder} title={deliveyText.time}\r\n\t\t\t\t\t\t\t\tpriseDelivery={deliveyText.price} setDeliveryPreise={setDeliveryPreise} />\r\n\t\t\t\t\t\t\t<FieldTextCart name='deliveryStreet' title={deliveyText?.street} />\r\n\t\t\t\t\t\t\t<FieldTextCart name='deliveryFlat' title={deliveyText?.flat} />\r\n\t\t\t\t\t\t\t<StyledCommentBox>\r\n\t\t\t\t\t\t\t\t<FieldTextCart name='comment' title={deliveyText?.comment} FormType='textArea'\r\n\t\t\t\t\t\t\t\t\tvalidate={() => { }} />\r\n\t\t\t\t\t\t\t</StyledCommentBox>\r\n\t\t\t\t\t\t</StyledDeliveryGroup> : null}\r\n\r\n\r\n\t\t\t\t\t{props.values.delivery === 'pickup' ? <PickupContainer city={props.values.city}\r\n\t\t\t\t\t\tgetCityArrWithShops={getCityArrWithShops} /> : null}\r\n\r\n\t\t\t\t</StyledDeliveryForm>)\r\n\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t</Formik >\r\n\t);\r\n};\r\n\r\nexport default React.memo(CartDeliveryForm);","import React, { FC } from 'react';\r\n\r\nimport { ArrowFn } from '../../../types/fnTypes';\r\nimport ShortShow from '../ShortShow';\r\nimport ShopAdress from './PickupContainer/ShopAdress';\r\nimport styled from 'styled-components';\r\nimport { IDeliveryDetalsShort } from './CartDeliveryContainer';\r\n\r\n\r\ninterface ICartDeliveryShort {\r\n\tonClickBtnChange: ArrowFn;\r\n\tdeliveryDetals: IDeliveryDetalsShort;\r\n\ttitel: string;\r\n};\r\n\r\n\r\nconst StyledDeliveryShortBox = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction:column;\r\n\t\r\n`;\r\nconst StyledCartDeliveryShort = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction:column;\r\n`;\r\nconst StyledTitelShort = styled.div`\r\n\tfont-weight: 600;\r\n\tfont-size: 20px;\r\n\tmargin-bottom:20px;\r\n`;\r\n// component with information about delivery and button change\r\nconst CartDeliveryShort: FC<ICartDeliveryShort> = ({ onClickBtnChange, deliveryDetals, titel }) => {\r\n\r\n\treturn (\r\n\t\t<ShortShow cangeOrderData={onClickBtnChange}>\r\n\t\t\t<StyledDeliveryShortBox>\r\n\t\t\t\t<StyledTitelShort>{titel}</StyledTitelShort>\r\n\t\t\t\t<StyledCartDeliveryShort><ShopAdress {...deliveryDetals} /></StyledCartDeliveryShort>\r\n\t\t\t</StyledDeliveryShortBox>\r\n\t\t</ShortShow>\r\n\r\n\t);\r\n};\r\n\r\nexport default React.memo(CartDeliveryShort);","import React, { FC } from 'react';\r\n\r\nimport { selectDeliveryDetails } from '../../../redux/CartSlice';\r\nimport { useAppSelector } from '../../../redux/hooks';\r\nimport { selectCartDeliveryTextDelivery, selectCartDeliveryTextPickup } from '../../../redux/LanguageSlice';\r\n\r\nimport BtnNext from '../BtnNext';\r\nimport { ISetNext, IUseStateCartDeliveryForm } from '../Cart';\r\n\r\n\r\nimport { StyledCartItemContainer, StyledCartItemTitle } from '../Order/OrderContainer';\r\nimport CartDeliveryForm from './CartDeliveryForm';\r\nimport CartDeliveryShort from './CartDeliveryShort';\r\n\r\n\r\n\r\ninterface ICartDeliveryContainer extends ISetNext, IUseStateCartDeliveryForm {\r\n\ttitle: string;\r\n};\r\nexport interface IDeliveryDetalsShort {\r\n\tcity: string;\r\n\tadress: string;\r\n\tmode: string;\r\n};\r\n\r\n\r\n// Delivery unit in the basket\r\nconst CartDeliveryContainer: FC<ICartDeliveryContainer> = ({ title, isNext, setIsNext, setDeliveryPreise }) => {\r\n\r\n\r\n\tconst deliveyText = useAppSelector(selectCartDeliveryTextDelivery)!;\r\n\tconst pickupText = useAppSelector(selectCartDeliveryTextPickup)!;\r\n\tconst deliveryDetails = useAppSelector(selectDeliveryDetails);\r\n\t// Speech store address\r\n\tconst pickupShopDetails = deliveryDetails.delivery === 'pickup' ?\r\n\t\tpickupText.shope!.filter(e => e.idShop === deliveryDetails.shopAdress)[0] : null;\r\n\r\n\tconst deliveryDetalsShort: IDeliveryDetalsShort = deliveryDetails.delivery === 'delivery' ? {\r\n\t\tcity: deliveryDetails.city,\r\n\t\tadress: `${deliveryDetails.deliveryStreet}, ${deliveryDetails.deliveryFlat}`,\r\n\t\tmode: `${deliveryDetails.deliveryDate}, ${deliveryDetails.deliveryTime}`,\r\n\t} : {\r\n\t\tcity: pickupShopDetails ? pickupShopDetails.city : '',\r\n\t\tadress: pickupShopDetails ? pickupShopDetails.adress : '',\r\n\t\tmode: pickupShopDetails ? pickupShopDetails.mode : '',\r\n\t};\r\n\r\n\tconst deliveryTitelShort: string = deliveryDetails.delivery === 'delivery' ? deliveyText.shortTitle : pickupText.shortTitle;\r\n\r\n\treturn (<>\r\n\t\t<StyledCartItemContainer>\r\n\t\t\t<StyledCartItemTitle>{title}</StyledCartItemTitle>\r\n\t\t\t{!isNext ? <CartDeliveryForm setDeliveryPreise={setDeliveryPreise} setIsNext={setIsNext} /> :\r\n\t\t\t\t<CartDeliveryShort onClickBtnChange={() => setIsNext(false)}\r\n\t\t\t\t\tdeliveryDetals={deliveryDetalsShort} titel={deliveryTitelShort} />}\r\n\t\t</StyledCartItemContainer>\r\n\t\t{isNext ? null : <BtnNext type='submit' form='DeliveryForm' />}\r\n\t</>\r\n\t);\r\n};\r\n\r\nexport default React.memo(CartDeliveryContainer);","import React, { FC, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Container from '../Container';\r\nimport { StyledMain } from './../Main/Main';\r\nimport { selectCartTextDeliveryMethod, selectCartTextPaymentMethod, selectCartTextRecipient, selectCartTextTitle } from './../../redux/LanguageSlice';\r\n\r\nimport { useAppSelector } from '../../redux/hooks';\r\nimport OrderContainer from './Order/OrderContainer';\r\nimport CartMetodNotActiv from './CartMetodNotActiv';\r\nimport CartTotalContainer from './Total/CartTotalContainer';\r\nimport CartDeliveryContainer from './Delivery/CartDeliveryContainer';\r\nimport { useAppDispatch } from './../../redux/hooks';\r\nimport { setTotalPiese } from '../../redux/CartSlice';\r\n\r\nexport interface ISetIsNext {\r\n\tsetIsNext: (el: boolean) => void;\r\n};\r\nexport interface ISetNext extends ISetIsNext {\r\n\tisNext: boolean;\r\n};\r\nexport interface IUseStateCartDeliveryForm {\r\n\tsetDeliveryPreise?: React.Dispatch<React.SetStateAction<number>>;\r\n};\r\n\r\n\r\nconst StyledCartContainer = styled.div`\r\n\tpadding: 0 20px;\r\n\tdisplay: grid;\r\n\tcolumn-gap:20px;\r\n\t@media ${props => props.theme.media?.desktop || `(min-width: 991.98px)`} {\r\n\t\tgrid-template-columns: 1fr 420px;\r\n\t};\r\n`;\r\n\r\nconst StyledTitle = styled.div`\r\n\tfont-weight: 700;\r\n\tfont-size: 24px;\r\n\tline-height: 130%;\r\n\tmargin-top:30px;\r\n\tmargin-bottom:30px;\r\n\t@media ${props => props.theme.media?.tablet || '(min-width: 767.98px)'} {\r\n\t\tmargin-top:50px;\r\n\t\tfont-size: 28px;\r\n\t};\r\n\t\r\n\t@media ${props => props.theme.media?.desktop || `(min-width: 991.98px)`} {\r\n\t\tmargin-top:60px;\r\n\t\tmargin-bottom:50px;\r\n\t\tfont-size: 36px;\r\n\t\tgrid-column:1/3;\r\n\t};\r\n`;\r\n\r\nconst StyledTotal = styled.div`\r\n\t@media ${props => props.theme.media?.desktop || `(min-width: 991.98px)`} {\r\n\t\tgrid-column:2/3;\r\n\t\t\r\n\t};\r\n`;\r\n\r\nconst StyledCartBlock = styled.div`\r\n\tdisplay: grid;\r\n`;\r\n\r\nconst Cart = () => {\r\n\tconst dispatch = useAppDispatch();\r\n\t// The total price of goods in the basket\r\n\tconst [totalPrise, setTotalPreise] = useState('0.00');\r\n\t// The delivery price of goods in the basket\r\n\tconst [deliveryPrise, setDeliveryPreise] = useState(0);\r\n\t// whether the button is pressedressed Order\r\n\tconst [isNextOrder, setIsNextOrder] = useState(false);\r\n\t// whether the button is pressedressed Delivety\r\n\tconst [isNextDelivery, setIsNextDelivery] = useState(false);\r\n\t//The title is common text\r\n\tconst titleText = useAppSelector(selectCartTextTitle);\r\n\t// The text of the Delivery section\r\n\tconst deliveryText = useAppSelector(selectCartTextDeliveryMethod);\r\n\t// The text of the section Payment\r\n\tconst paymentText = useAppSelector(selectCartTextPaymentMethod);\r\n\t// The text of the section is the recipient\r\n\tconst recipientText = useAppSelector(selectCartTextRecipient);\r\n\t// sending order data\r\n\tconst onCheckout = () => {\r\n\t\t// Distribute the total amount of the order\r\n\t\tdispatch(setTotalPiese(+totalPrise + deliveryPrise))\r\n\t\tconsole.log('Checkout');\r\n\r\n\t};\r\n\t// transition to a user agreement\r\n\tconst goToUserAagreement = () => {\r\n\t\tconsole.log('UserAagreement');\r\n\r\n\t};\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<StyledMain>\r\n\t\t\t<Container>\r\n\t\t\t\t<StyledCartContainer>\r\n\r\n\t\t\t\t\t<StyledTitle>{titleText}</StyledTitle>\r\n\t\t\t\t\t<StyledCartBlock>\r\n\t\t\t\t\t\t<OrderContainer setTotalPrise={setTotalPreise} setIsNext={setIsNextOrder} isNext={isNextOrder} />\r\n\r\n\t\t\t\t\t\t{isNextOrder ?\r\n\t\t\t\t\t\t\t<CartDeliveryContainer title={deliveryText?.title!}\r\n\t\t\t\t\t\t\t\tsetIsNext={setIsNextDelivery} isNext={isNextDelivery}\r\n\t\t\t\t\t\t\t\tsetDeliveryPreise={setDeliveryPreise} />\r\n\t\t\t\t\t\t\t: <CartMetodNotActiv title={deliveryText?.title!} />}\r\n\r\n\t\t\t\t\t\t<CartMetodNotActiv title={paymentText?.title!} />\r\n\t\t\t\t\t\t<CartMetodNotActiv title={recipientText?.title!} />\r\n\t\t\t\t\t</StyledCartBlock>\r\n\t\t\t\t\t<StyledTotal>\r\n\t\t\t\t\t\t<CartTotalContainer totalPrise={totalPrise}\r\n\t\t\t\t\t\t\tisCheckout={true} onCheckout={onCheckout}\r\n\t\t\t\t\t\t\tgoToUserAagreement={goToUserAagreement} deliveryPrise={deliveryPrise} />\r\n\t\t\t\t\t</StyledTotal>\r\n\t\t\t\t</StyledCartContainer>\r\n\t\t\t</Container>\r\n\t\t</StyledMain>\r\n\t);\r\n};\r\n\r\nexport default React.memo(Cart);\r\n"],"names":["StyledBtnNext","styled","props","theme","color","divider","media","tablet","BtnNext","onClickNextBtnCart","type","form","isDisabled","btnNextText","useAppSelector","selectCartTextBtnNext","Button","width","height","onClick","disabled","React","StyledItemOrderCountContaoner","StyledBtnConter","isBlack","StyledMinus","StyledPlus","StyledCount","ItemOrderCounter","itemCount","plusOne","minusOne","StyledItemOrderCounter","itemId","dispatch","useAppDispatch","addItemToCart","delItemToCart","StyledOrderItemPreise","item","PriseContainer","prise","discount","isOrder","ImgStyled","alt","src","StyledImg","StyledItemName","StyledOrderItemContainer","StyledOrderContainer","StyledTrashCan","text","second","main","OrderItem","onClickItem","onClickTrashCan","id","itemname","itemDescription","className","StyledOrder","StyledOrderElem","Order","items","orderItem","delAllItemToCart","itemOredrElem","map","e","i","filter","el","length","isBottomBd","BtnChange","onClickCangeBtnCart","textBtn","btnText","selectCartTextBtnChange","bgColor","border","hoverBgColor","hoverColor","StyledOrderShortContainer","StyledBtnChange","children","cangeOrderData","StyledItemsImg","StyledImgBox","blue","onClickImg","imgItmeElems","StyledCartItemTitle","desktop","StyledCartItemContainer","OrderContainer","setTotalPrise","setIsNext","isNext","titleText","selectCartTextOrder","selectItemInCart","selectitemsData","includes","totalPrise","reduce","prev","dicsountPrise","toFixed","Number","useEffect","console","log","title","setOrderItems","StyledTextTitleNotActive","CartMetodNotActiv","StyledCartTotelBox","lightBlue","StyledTotalTitle","StyledTotalPrise","StyledText","StyledTotal","StyledTotalText","StyledPrise","StyledAcceptUserAagreement","StyledCheckboxBlock","StyledCheckboxLabel","StyledAToUserAagreementBnt","darkBlue","CartTotalContainer","deliveryPrise","isCheckout","onCheckout","goToUserAagreement","cartTotalText","selectCartTextTotal","countItwm","useState","isChecked","setIsChecked","goodForAmmount","costOfDelivery","free","toPay","checkout","onChange","hidden","RememberMe","value","byConfirming","StyledDateCartBox","heigthBox","bdColor","cardBorder","isOnlyBdColor","StyledRadioDot","StyledLabels","StyledTextLebel","CartFormRadio","useField","field","checked","StyledInputBox","StyledInputDateInput","StyledInputDateMask","DeliveryDateBoxContainer","dateMinMax","meta","dateText","selectDateMonDayText","fieldDate","Date","dayofDifferent","getDate","dayW","futureDays","dateElem","month","getMonth","day","getDay","sessionStorage","setItem","name","StyledTitleDateBox","error","touched","min","max","StyledCitySelect","StyledErrorMessage","red","StyledPriseText","SelectCityContainer","option","placholderText","optionPlus","priseDelivery","setDeliveryPreise","cityName","validate","validateSelectIsEnpty","getPriseFormat","valueText","arr","inputDate","undefined","sort","getOptionElemrnt","cityArr","StyledInput","StyledTextArea","FieldTextCart","FormType","StyledArress","StyledMode","ShopAdress","city","adress","mode","StyledRadioBox","StyledRadioBoxForMobil","StyledRadioBoxForNabletAndDesktop","PickupContainer","amount","getCityArrWithShops","pickupText","selectCartDeliveryTextPickup","elemAmount","setElemAmount","isBtnShow","setIsBtnShow","shopInCityList","shope","getRadioElemFromArr","idShop","productIsAvailable","slice","btnNext","StyledDeliveryForm","Form","StyledRadioGruppeAndSelectCity","StyledRadioGruppe","StyledTitelDelivery","StyledDeliveryGroup","StyledCommentBox","CartDeliveryForm","deliveyText","selectCartDeliveryTextDelivery","yourCityName","selectCartDeliveryTextCity","initialValues","getItem","delivery","deliveryDate","getDateIsMoreTodayForString","deliveryTime","deliveryStreet","deliveryFlat","comment","shopAdress","cityNames","timeInterval","setCity","Set","forEach","add","Array","from","onSubmit","values","actions","validateForm","setDeliveryDate","cityNameFromShopAdress","method","date","timePlasholder","time","price","street","flat","StyledDeliveryShortBox","StyledCartDeliveryShort","StyledTitelShort","CartDeliveryShort","onClickBtnChange","deliveryDetals","titel","CartDeliveryContainer","deliveryDetails","selectDeliveryDetails","pickupShopDetails","deliveryDetalsShort","deliveryTitelShort","shortTitle","StyledCartContainer","StyledTitle","StyledCartBlock","Cart","setTotalPreise","isNextOrder","setIsNextOrder","isNextDelivery","setIsNextDelivery","selectCartTextTitle","deliveryText","selectCartTextDeliveryMethod","paymentText","selectCartTextPaymentMethod","recipientText","selectCartTextRecipient","Container","setTotalPiese"],"sourceRoot":""}