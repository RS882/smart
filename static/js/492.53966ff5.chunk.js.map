{"version":3,"file":"static/js/492.53966ff5.chunk.js","mappings":"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","sources":["components/Cart/CartDateBox.tsx","components/Cart/Delivery/DeliveryDateBox/DeliveryDateBoxContainer.tsx","components/Cart/Delivery/InputText/InputTextCart.tsx","components/Cart/Delivery/SelectCity/SelectCityContainer.tsx","components/PrivateOffice/GeneralInformation.tsx","components/PrivateOffice/PersonalData.tsx","utilits/hooks.ts"],"sourcesContent":["import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nexport interface ICartDateBox {\r\n\tbdColor?: string;\r\n\theigthBox?: string;\r\n\tisOnlyBdColor?: boolean;\r\n};\r\n\r\nconst StyledDateCartBox = styled.div<ICartDateBox>`\r\n\twidth: 100%;\r\n\theight:${props => props.heigthBox};\r\n\tborder: 2px solid ${props => props.bdColor || props.theme.color.cardBorder || '#EAEAF0'};\r\n\tcolor:${props => props.isOnlyBdColor ? props.theme.color.text.main : props.bdColor || props.theme.color.text.second || '#838688'};\r\n\tborder-radius: 5px;\r\n\tdisplay: flex;\r\n\talign-items:center;\r\n\tpadding:0 10px 0 ${props => props.isOnlyBdColor ? '0' : '20px'};\r\n\ttransition: all 0.3s ease 0s;\r\n\t@media ${props => props.theme.media?.tablet || '(min-width: 767.98px)'} {\r\n\t\theight:48px;\r\n\t};\r\n\r\n`;\r\n\r\n// stylized boxing boxes in the basket\r\nconst CartDateBox: FC<ICartDateBox> = ({ bdColor = '', heigthBox = '48px', isOnlyBdColor = false, children }) => {\r\n\r\n\r\n\treturn (\r\n\t\t<StyledDateCartBox bdColor={bdColor} heigthBox={heigthBox} isOnlyBdColor={isOnlyBdColor}>\r\n\t\t\t{children}\r\n\t\t</StyledDateCartBox>\r\n\t);\r\n};\r\n\r\nexport default CartDateBox;","\r\nimport { useField } from 'formik';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useAppSelector } from '../../../../redux/hooks';\r\nimport { selectDateMonDayText } from '../../../../redux/LanguageSlice';\r\nimport { useFocusedField } from '../../../../utilits/hooks';\r\nimport CartDateBox from '../../CartDateBox';\r\nimport { InputAttrProps } from '../CartDeliveryForm';\r\nimport { StyledTitleDateBox } from '../SelectCity/SelectCityContainer';\r\n\r\ninterface IDeliveryDateBoxContainer {\r\n\tdateMinMax: string[];\r\n\ttitle: string;\r\n};\r\n\r\n\r\nexport const StyledInputBox = styled.div`\r\n\tposition: relative;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n`;\r\nconst StyledInputDateInput = styled.input`\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\t opacity:0; \r\n\t&::-webkit-calendar-picker-indicator{\r\n\t\tbackground-color:red;\r\n\t\twidth: 100%;\r\n\t\tcursor: pointer;\r\n\t}\r\n`;\r\nexport const StyledInputDateMask = styled.div`\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: flex;\r\n\talign-items:center;\r\n\tcolor: ${props => props.theme.color.text.main};\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: calc(100% - 0.25em) 50%;\r\n\tbackground-size: 0.85em auto;\r\n\tbackground-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 80 80'%3E%3Cpath d='M70.3 13.8L40 66.3 9.7 13.8z' fill='%23000'%3E%3C/path%3E%3C/svg%3E\");\r\n\tpointer-events: none;\r\n\tz-index:10;\r\n`;\r\n//Delivery Day component\r\nconst DeliveryDateBoxContainer = ({ title, dateMinMax, ...props }: IDeliveryDateBoxContainer & InputAttrProps) => {\r\n\tconst [field, meta] = useField({ ...props, type: 'date', });\r\n\tconst dateText = useAppSelector(selectDateMonDayText)!;\r\n\t//formates the date for the output\r\n\tconst fieldDate = new Date(field.value);\r\n\tconst dayofDifferent: number = fieldDate.getDate() - new Date().getDate();\r\n\tconst dayW: string = (dayofDifferent + 1 <= dateText.futureDays.length) ?\r\n\t\tdateText.futureDays[dayofDifferent] + ', ' : '';\r\n\tconst dateElem: string = `${dayW}${fieldDate.getDate()} ${dateText.month[fieldDate.getMonth()]},\r\n\t ${dateText.day[fieldDate.getDay()]}`;\r\n\r\n\tsessionStorage.setItem(field.name, field.value);\r\n\r\n\tconst [isFocus, onFocusFn] = useFocusedField(field.onBlur);\r\n\r\n\tconst brdColor = meta.error && meta.touched ? '#F15152' : isFocus ? '#838688' : ''\r\n\r\n\treturn (<div>\r\n\t\t<StyledTitleDateBox>{title}</StyledTitleDateBox>\r\n\t\t<CartDateBox bdColor={brdColor}>\r\n\t\t\t<StyledInputBox>\r\n\t\t\t\t<StyledInputDateInput type=\"date\" {...field} {...props} {...onFocusFn} min={dateMinMax[0]} max={dateMinMax[1]} />\r\n\t\t\t\t<StyledInputDateMask  >{dateElem}</StyledInputDateMask>\r\n\t\t\t</StyledInputBox>\r\n\t\t</CartDateBox>\r\n\t</div>\r\n\t);\r\n};\r\n\r\nexport default React.memo(DeliveryDateBoxContainer);","import { ErrorMessage, useField } from 'formik';\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useFocusedField } from '../../../../utilits/hooks';\r\nimport { validateSelectIsEnpty } from '../../../../utilits/validators';\r\nimport CartDateBox from '../../CartDateBox';\r\nimport { InputAttrProps } from '../CartDeliveryForm';\r\nimport { StyledErrorMessage, StyledTitleDateBox } from '../SelectCity/SelectCityContainer';\r\n\r\ninterface IFiledTextCart {\r\n\ttitle: string;\r\n\tFormType?: string;\r\n\tisStorage?: boolean;\r\n};\r\n\r\nconst StyledInput = styled.input`\r\n\twidth:100%;\r\n\theight: 100%;\r\n\r\n\t&::placeholder{\r\n\t\tcolor: ${props => props.theme.color.text.second || '#838688'};\r\n\t\tmargin-left:20px;\r\n\t\t\r\n\t};\r\n\t&::file-selector-button {\r\n\t\tmargin: 12px 12px 12px 0;\r\n\t}\r\n`;\r\nconst StyledTextArea = styled.textarea`\r\n\twidth:100%;\r\n\theight: 100%;\r\n\t&::placeholder{\r\n\t\tcolor: ${props => props.theme.color.text.second || '#838688'};\r\n\t\tmargin-left:20px;\r\n\t}\r\n`;\r\n\r\n\r\n// Components for text output\r\nconst FieldTextCart = ({ title, FormType = 'input', isStorage = true, ...props }: IFiledTextCart & InputAttrProps) => {\r\n\r\n\r\n\r\n\tconst [field, meta] = useField({ ...props, validate: props.validate || validateSelectIsEnpty, });\r\n\tconst [isFocus, onFocusFn] = useFocusedField(field.onBlur);\r\n\tconst brdColor = meta.error && meta.touched ? '#F15152' : isFocus ? '#838688' : '';\r\n\r\n\r\n\tisStorage && sessionStorage.setItem(field.name, field.value);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<StyledTitleDateBox>{title}</StyledTitleDateBox>\r\n\t\t\t<CartDateBox bdColor={brdColor}\r\n\t\t\t\theigthBox={FormType === 'input' ? '48px' : '96px'}>\r\n\t\t\t\t{FormType === 'input' ? <StyledInput {...field} {...props} {...onFocusFn} />\r\n\t\t\t\t\t: <StyledTextArea  {...field} {...props} {...onFocusFn} />}\r\n\t\t\t</CartDateBox>\r\n\t\t\t<StyledErrorMessage>\t<ErrorMessage name={field.name} /></StyledErrorMessage>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default React.memo(FieldTextCart);\r\n\r\n\r\n","import { ErrorMessage, useField } from 'formik';\r\nimport React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useFocusedField } from '../../../../utilits/hooks';\r\nimport { validateSelectIsEnpty } from '../../../../utilits/validators';\r\nimport { IUseStateCartDeliveryForm } from '../../Cart';\r\nimport CartDateBox from '../../CartDateBox';\r\nimport { SelectAttrProps } from '../CartDeliveryForm';\r\nimport { StyledInputBox, StyledInputDateMask } from '../DeliveryDateBox/DeliveryDateBoxContainer';\r\n\r\ninterface ICartFormRadio {\r\n\tcityName?: string;\r\n};\r\n\r\n\r\ninterface ISelectCityContainer extends IUseStateCartDeliveryForm, ICartFormRadio {\r\n\toption?: string[];\r\n\ttitle?: string;\r\n\tplacholderText?: string;\r\n\toptionPlus?: [string, number][];\r\n\tpriseDelivery?: string;\r\n\tisStorage?: boolean;\r\n\r\n};\r\nexport const StyledCitySelect = styled.select`\r\n\topacity:0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\t\r\n\t\tcolor:${props => props.theme.color.text.second || '#838688'};\r\n\t\r\n`;\r\n\r\n\r\nexport const StyledTitleDateBox = styled.div`\r\n\tmargin-bottom:8px;\r\n`;\r\nexport const StyledErrorMessage = styled.div`\r\n\tfont-size:12px;\r\n\tfont-weight:700;\r\n\tcolor:${props => props.theme.color.red || '#F15152'};\r\n\tz-index:30;\r\n\t\r\n`;\r\nconst StyledPriseText = styled.span`\r\n\tcolor:${props => props.theme.color.text.second || '#838688'};\r\n`;\r\n\r\n\r\n// component of the type of Select to the form of a dozen\r\nconst SelectCityContainer = ({ option, title, placholderText, optionPlus,\r\n\tpriseDelivery, setDeliveryPreise, cityName, isStorage = true,\r\n\t...props }: ISelectCityContainer & SelectAttrProps) => {\r\n\r\n\r\n\tconst [field, meta] = useField({ ...props, validate: props.validate || validateSelectIsEnpty });\r\n\r\n\r\n\t//set the delivery price format\r\n\tconst getPriseFormat = (prise: number, text: string = 'free'): string =>\r\n\t\tprise ? ` (${prise.toFixed(2) + '€'})` : ` (${text})`;\r\n\r\n\t// List output for the list Select\r\n\tconst getOptionElemrnt = (option?: string[], optionPlus?: [string, number][]): JSX.Element[] | null => {\r\n\t\tif (!option && !optionPlus) return null;\r\n\t\tif (optionPlus) return optionPlus!.map((e, i) =>\r\n\t\t\t<option value={e[0]} key={e[0] + i}>{e[0]}{getPriseFormat(e[1], priseDelivery)}</option>);\r\n\r\n\r\n\r\n\t\tconst res = field.name === 'paymentMethod' || 'payMethod' || 'deliveryMethod' ?\r\n\t\t\toption!.map((e, i) => <option value={e} key={e + i}>{e}</option>) :\r\n\t\t\toption!.sort().map((e, i) => <option value={e} key={e + i}>{e}</option>);\r\n\t\treturn res;\r\n\t};\r\n\r\n\t// We form a text for show \r\n\r\n\tconst valueText: string = field.value;\r\n\tconst arr: [string, number] | null = optionPlus ? optionPlus!.filter(e => e[0] === valueText)[0] : null;\r\n\tconst inputDate: JSX.Element = arr ?\r\n\t\t<span>{valueText}<StyledPriseText> {`${getPriseFormat(arr[1], priseDelivery)}`}</StyledPriseText></span>\r\n\t\t: <span>{valueText || placholderText || title}</span>;\r\n\r\n\tisStorage && sessionStorage.setItem(field.name, valueText);\r\n\r\n\t// We set the delivery price\r\n\tuseEffect(() => { arr && setDeliveryPreise !== undefined && setDeliveryPreise(arr[1]) }, [arr]);\r\n\r\n\tconst [isFocus, onFocusFn] = useFocusedField(field.onBlur);\r\n\r\n\tconst brdColor = meta.error && meta.touched ? '#F15152' : isFocus ? '#838688' : '';\r\n\r\n\r\n\treturn (<div>\r\n\t\t<StyledTitleDateBox>{title}</StyledTitleDateBox>\r\n\t\t<CartDateBox bdColor={brdColor}>\r\n\t\t\t<StyledInputBox>\r\n\t\t\t\t<StyledCitySelect  {...field} {...props} {...onFocusFn}>\r\n\t\t\t\t\t<option value='' disabled>{placholderText || title}</option>\r\n\t\t\t\t\t{getOptionElemrnt(option, optionPlus)}\r\n\t\t\t\t</StyledCitySelect>\r\n\t\t\t\t<StyledInputDateMask>{inputDate}</StyledInputDateMask>\r\n\t\t\t</StyledInputBox>\r\n\t\t</CartDateBox>\r\n\t\t<StyledErrorMessage>\t<ErrorMessage name={field.name} /></StyledErrorMessage>\r\n\t</div>\r\n\r\n\t);\r\n};\r\n\r\nexport default React.memo(SelectCityContainer);","import React from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useAppSelector } from '../../redux/hooks';\r\nimport { selectGeneralInformationTaxt } from '../../redux/LanguageSlice';\r\nimport { selectUserData } from '../../redux/LoginSlice';\r\nimport Button from '../Button';\r\nimport noAvatar from '../../assets/noAvatar.png';\r\n\r\n\r\nexport const StyledPrivatOfficebox = styled.div`\r\n\tmargin: 0 20px 50px 20px;\r\n\t@media ${props => props.theme.media?.tablet || '(width >= 767.98px)'}{\r\n\t\tmargin-bottom:60px;\r\n\t};\r\n\t@media ${props => props.theme.media?.desktop || '(width >= 991.98px)'} {\r\n\t\tmargin: 0 0px 0px 135px;\r\n\t}\r\n`;\r\n\r\n\r\n\r\nconst StyledName = styled.div`\r\n\tfont-weight: 600;\r\n\tfont-size: 24px;\r\n\tmargin-bottom:30px;\r\n\t@media ${props => props.theme.media?.desktop || '(width >= 991.98px)'} {\r\n\t\tfont-weight: 700;\r\n\t\tfont-size: 28px;\r\n\t}\r\n`;\r\n\r\nconst StyledAvatarAndUserInfoBox = styled.div`\r\n\tmargin-bottom:30px;\r\n\t@media ${props => props.theme.media?.tablet || '(width >= 767.98px)'}{\r\n\tdisplay: flex;\r\n\t}\r\n`;\r\n\r\nconst StyledUserInfoBox = styled.div`\r\n\t@media ${props => props.theme.media?.tablet || '(width >= 767.98px)'}{\r\n\tmargin-left:30px;\r\n\t}\r\n`;\r\n\r\nconst StyledAvatarBox = styled.div`\r\n\theight:101px;\r\n\twidth:101px;\r\n\t`;\r\n\r\nconst SyledAvatar = styled.img`\r\n\theight:100%;\r\n\twidth:100%;\r\n\tborder-radius: 5px;\r\n`;\r\n\r\nconst StyledUserInformation = styled.div`\r\n\tmargin-top:10px;\r\n\t\r\n`;\r\nconst StyledArticle = styled.div`\r\nmargin-bottom:20px;\r\n`;\r\n\r\nconst StyledArticleText = styled.span`\r\n\r\n`;\r\n\r\nconst StyledArticleLink = styled(Link)`\r\n\tcolor: ${props => props.theme.color.darkBlue || '#2A5275'};\r\n\tfont-weight: 600;\r\n\ttransition: all 0.3s ease 0s;\r\n\t&:hover{\r\n\t\tcolor: ${props => props.theme.color.blue || '#4878A6'};\r\n\t}\r\n`;\r\n\r\nexport const StyledBtn = styled.div`\r\n\twidth:100%;\r\n\t@media ${props => props.theme.media?.tablet || '(width >= 767.98px)'} {\r\n\t\twidth: 310px;\r\n\t\t\r\n\t};\r\n`\r\n\r\nconst GeneralInformation = () => {\r\n\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst user = useAppSelector(selectUserData);\r\n\tconst text = useAppSelector(selectGeneralInformationTaxt);\r\n\r\n\tconst regDate = new Date(Date.parse(user.registrationDate));\r\n\tconst addNullAfter = (num: number): string => num > 0 && num < 10 ? `0${num}` : `${num}`;\r\n\tconst regDateText: string = `${regDate.getDate()}-${addNullAfter(regDate.getMonth() + 1)}-${regDate.getFullYear()}`;\r\n\r\n\tconst getArticleText = (text: string): JSX.Element => <><StyledArticleText>{text}</StyledArticleText>{` `} </>;\r\n\r\n\tconst onClickGoToPersData = () => navigate('/privateOffice/personalData');\r\n\r\n\treturn (\r\n\t\t<StyledPrivatOfficebox>\r\n\t\t\t<StyledName>{user.name}</StyledName>\r\n\t\t\t<StyledAvatarAndUserInfoBox>\r\n\t\t\t\t<StyledAvatarBox>\r\n\t\t\t\t\t<SyledAvatar src={user.avatar || noAvatar} height='101' width='101' alt='User avatar' />\r\n\t\t\t\t</StyledAvatarBox>\r\n\t\t\t\t<StyledUserInfoBox>\r\n\t\t\t\t\t<StyledUserInformation> {`${text.regData} ${regDateText}`}</StyledUserInformation>\r\n\t\t\t\t\t<StyledUserInformation> {`${text.numOfOrders} ${user.shoppingHistory.length}`}</StyledUserInformation>\r\n\t\t\t\t</StyledUserInfoBox>\r\n\t\t\t</StyledAvatarAndUserInfoBox>\r\n\r\n\t\t\t<StyledArticle>\r\n\t\t\t\t{getArticleText(text.articleText[0])}\r\n\t\t\t\t<StyledArticleLink to='/privateOffice/personalData'>{text.articleText[1]} </StyledArticleLink>\r\n\t\t\t\t{getArticleText(text.articleText[2])}\r\n\t\t\t\t<StyledArticleLink to='/privateOffice/changePassword'>{text.articleText[3]} </StyledArticleLink>\r\n\t\t\t\t{getArticleText(text.articleText[4])}\r\n\t\t\t\t<StyledArticleLink to='/privateOffice/shoppingHistory'>{text.articleText[5]} </StyledArticleLink>\r\n\t\t\t\t{getArticleText(text.articleText[6])}\r\n\t\t\t\t<StyledArticleLink to='/privateOffice/favorites'>{text.articleText[7]} </StyledArticleLink>\r\n\t\t\t</StyledArticle>\r\n\r\n\t\t\t<StyledBtn>\r\n\t\t\t\t<Button width='100%' onClick={onClickGoToPersData}>{text.btnText}</Button>\r\n\t\t\t</StyledBtn>\r\n\r\n\t\t</StyledPrivatOfficebox>\r\n\t);\r\n};\r\n\r\nexport default GeneralInformation;","import { Formik, Form } from 'formik';\r\nimport React from 'react';\r\nimport { useAppSelector } from '../../redux/hooks';\r\nimport { selectDeliveryMethods, selectPaymentMethodTaxt, selectPersonalDataText } from '../../redux/LanguageSlice';\r\nimport { IUserDate, selectUserData } from '../../redux/LoginSlice';\r\nimport { StyledBtn, StyledPrivatOfficebox } from './GeneralInformation';\r\nimport FieldTextCart from '../Cart/Delivery/InputText/InputTextCart'\r\nimport { validateEmail } from '../../utilits/validators';\r\nimport Button from '../Button';\r\nimport SelectCityContainer from '../Cart/Delivery/SelectCity/SelectCityContainer';\r\nimport styled from 'styled-components';\r\nimport { useAppDispatch } from './../../redux/hooks';\r\nimport { changeUserData } from './../../redux/Thunk/thunkLogin';\r\n\r\ninterface IInitialValuesPersData {\r\n\tname: string;\r\n\temail: string;\r\n\tphoneNumber: string;\r\n\tcity: string;\r\n\tpostcode: string;\r\n\tadress: string;\r\n\tpayMethod: string;\r\n\tdeliveryMethod: string;\r\n\tavatar: string;\r\n}\r\n\r\n\r\nconst StyledPersonalDataForm = styled(Form)`\r\n\theight:100%;\r\n\twidth:100%;\r\n\tdisplay: grid;\r\n\tgap:20px;\r\n\tpadding-bottom:50px;\r\n\t@media ${props => props.theme.media?.tablet || '(width >= 767.98px)'}{\r\n\t\tpadding-bottom:60px;\r\n\t\tgrid-template-columns: repeat(2,1fr);\r\n\t};\r\n\t@media ${props => props.theme.media?.desktop || '(width >= 991.98px)'} {\r\n\t\tpadding-bottom:80px;\r\n\t};\r\n\r\n`;\r\nexport const StyledBtnPrivatData = styled.div`\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\talign-items:flex-end;\r\n`;\r\n\r\n\r\nconst PersonalData = () => {\r\n\r\n\tconst dispatsch = useAppDispatch();\r\n\tconst user = useAppSelector(selectUserData);\r\n\tconst textPersData = useAppSelector(selectPersonalDataText);\r\n\tconst payMethod = useAppSelector(selectPaymentMethodTaxt);\r\n\tconst deliveryMethod = useAppSelector(selectDeliveryMethods);\r\n\r\n\r\n\tconst initialValues: IInitialValuesPersData = {\r\n\t\tname: user.name,\r\n\t\temail: user.email,\r\n\t\tphoneNumber: user.phone,\r\n\t\tcity: user.city,\r\n\t\tpostcode: user.zipIndex,\r\n\t\tadress: user.address,\r\n\t\tpayMethod: payMethod.includes(user.paymentMethod) ? user.paymentMethod : '',\r\n\t\tdeliveryMethod: deliveryMethod.includes(user.deliveryMethod) ? user.deliveryMethod : '',\r\n\t\tavatar: '',\r\n\r\n\t};\r\n\treturn (\r\n\t\t<Formik initialValues={initialValues}\r\n\t\t\tonSubmit={(values, actions) => {\r\n\t\t\t\tconst resData: IUserDate = {\r\n\t\t\t\t\t...user,\r\n\t\t\t\t\tname: values.name,\r\n\t\t\t\t\temail: values.email,\r\n\t\t\t\t\tphone: values.phoneNumber,\r\n\t\t\t\t\tcity: values.city,\r\n\t\t\t\t\tzipIndex: values.postcode,\r\n\t\t\t\t\taddress: values.adress,\r\n\t\t\t\t\tpaymentMethod: values.adress,\r\n\t\t\t\t\tdeliveryMethod: values.deliveryMethod,\r\n\t\t\t\t\tavatar: values.avatar || user.avatar,\r\n\t\t\t\t};\r\n\t\t\t\tdispatsch(changeUserData(resData));\r\n\t\t\t\tactions.setSubmitting(false);\r\n\t\t\t}}>\r\n\t\t\t{(propsFormik) => (\r\n\t\t\t\t<StyledPrivatOfficebox>\r\n\t\t\t\t\t<StyledPersonalDataForm>\r\n\t\t\t\t\t\t<FieldTextCart name='name' title={textPersData.name} isStorage={false} placeholder={textPersData.placeholder} />\r\n\t\t\t\t\t\t<FieldTextCart name='email' title={textPersData.email} isStorage={false} validate={validateEmail} placeholder={textPersData.placeholder} />\r\n\t\t\t\t\t\t<FieldTextCart name='phoneNumber' isStorage={false} title={textPersData.phoneNumber}\r\n\t\t\t\t\t\t\tplaceholder={textPersData.placeholder} validate={() => { }} />\r\n\t\t\t\t\t\t<FieldTextCart name='city' isStorage={false} title={textPersData.city}\r\n\t\t\t\t\t\t\tplaceholder={textPersData.placeholder} validate={() => { }} />\r\n\t\t\t\t\t\t<FieldTextCart name='postcode' isStorage={false} title={textPersData.postcode}\r\n\t\t\t\t\t\t\tplaceholder={textPersData.placeholder} validate={() => { }} />\r\n\t\t\t\t\t\t<FieldTextCart name='adress' isStorage={false} title={textPersData.adress}\r\n\t\t\t\t\t\t\tplaceholder={textPersData.placeholder} validate={() => { }} />\r\n\t\t\t\t\t\t<SelectCityContainer name='payMethod' isStorage={false} title={textPersData.payMethod}\r\n\t\t\t\t\t\t\tplacholderText={textPersData.placeholder} option={payMethod} validate={() => { }} />\r\n\t\t\t\t\t\t<SelectCityContainer name='deliveryMethod' isStorage={false} title={textPersData.deliveryMethod}\r\n\t\t\t\t\t\t\tplacholderText={textPersData.placeholder} option={deliveryMethod} validate={() => { }} />\r\n\t\t\t\t\t\t<FieldTextCart name='avatar' isStorage={false} title={textPersData.avatar} type='file' validate={() => { }} />\r\n\t\t\t\t\t\t<StyledBtnPrivatData>\r\n\t\t\t\t\t\t\t<Button width='100%' height='48px' heigth768='48px' type='submit' disabled={propsFormik.isSubmitting} >{textPersData.btnText}</Button>\r\n\t\t\t\t\t\t</StyledBtnPrivatData>\r\n\t\t\t\t\t</StyledPersonalDataForm>\r\n\t\t\t\t</StyledPrivatOfficebox>\r\n\t\t\t)\r\n\r\n\t\t\t}\r\n\r\n\t\t</Formik>)\r\n};\r\n\r\nexport default PersonalData;","\r\nimport { useState } from 'react';\r\n\r\n// Hook that returns an array of two elements 1- brown value if the focus on the element or not\r\n// 2 an object of two functions onblur and onfocus that change the value of 1, depending on is the focus not an element or not\r\n// Hook accepts two arguments 1- DOP Function for the Onblur 2 - additional function for ONFOCUS\r\n\r\nexport const useFocusedField = (obBlurFn?: (e: React.FocusEvent<any, Element>) => void, onFocusFn?: (e: React.FocusEvent<any, Element>) => void,)\r\n\t: [boolean, { onBlur: (e: React.FocusEvent<HTMLInputElement>) => void, onFocus: (e: React.FocusEvent<HTMLInputElement>) => void }] => {\r\n\tconst [isActive, setIsActive] = useState(false);\r\n\r\n\treturn [isActive, {\r\n\t\tonBlur: (e: React.FocusEvent<HTMLInputElement>) => {\r\n\t\t\tobBlurFn !== undefined && obBlurFn(e);\r\n\t\t\tsetIsActive(false);\r\n\t\t},\r\n\t\tonFocus: (e: React.FocusEvent<HTMLInputElement>) => {\r\n\t\t\tonFocusFn !== undefined && onFocusFn(e);\r\n\t\t\tsetIsActive(true);\r\n\t\t},\r\n\t}];\r\n};"],"names":["StyledDateCartBox","styled","props","heigthBox","bdColor","theme","color","cardBorder","isOnlyBdColor","text","main","second","media","tablet","children","StyledInputBox","StyledInputDateInput","StyledInputDateMask","DeliveryDateBoxContainer","title","dateMinMax","useField","type","field","meta","dateText","useAppSelector","selectDateMonDayText","fieldDate","Date","value","dayofDifferent","getDate","dayW","futureDays","length","dateElem","month","getMonth","day","getDay","sessionStorage","setItem","name","useFocusedField","onBlur","isFocus","onFocusFn","brdColor","error","touched","min","max","React","StyledInput","StyledTextArea","FieldTextCart","FormType","isStorage","validate","validateSelectIsEnpty","StyledCitySelect","StyledTitleDateBox","StyledErrorMessage","red","StyledPriseText","SelectCityContainer","option","placholderText","optionPlus","priseDelivery","setDeliveryPreise","cityName","getPriseFormat","prise","toFixed","valueText","arr","filter","e","inputDate","useEffect","undefined","disabled","map","i","getOptionElemrnt","StyledPrivatOfficebox","desktop","StyledName","StyledAvatarAndUserInfoBox","StyledUserInfoBox","StyledAvatarBox","SyledAvatar","StyledUserInformation","StyledArticle","StyledArticleText","StyledArticleLink","Link","darkBlue","blue","StyledBtn","num","navigate","useNavigate","user","selectUserData","selectGeneralInformationTaxt","regDate","parse","registrationDate","regDateText","getFullYear","getArticleText","src","avatar","noAvatar","height","width","alt","regData","numOfOrders","shoppingHistory","articleText","to","onClick","btnText","StyledPersonalDataForm","Form","StyledBtnPrivatData","dispatsch","useAppDispatch","textPersData","selectPersonalDataText","payMethod","selectPaymentMethodTaxt","deliveryMethod","selectDeliveryMethods","initialValues","email","phoneNumber","phone","city","postcode","zipIndex","adress","address","includes","paymentMethod","onSubmit","values","actions","resData","changeUserData","setSubmitting","propsFormik","placeholder","validateEmail","heigth768","isSubmitting","obBlurFn","useState","isActive","setIsActive","onFocus"],"sourceRoot":""}